Terminals unused in grammar

    STRUCT
    TYPEDEF
    UNION
    INVALID_TOKEN
    ADD_ASSIGN
    HASH


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | constant
    3                   | LITERAL
    4                   | PARANTHESIS_OPEN expression PARANTHESIS_CLOSE

    5 constant: CONSTANT_INT
    6         | CONSTANT_FLOAT
    7         | CONSTANT_CHAR

    8 postfix_expression: primary_expression
    9                   | postfix_expression SQ_BRACKET_OPEN expression SQ_BRACKET_CLOSE
   10                   | postfix_expression PARANTHESIS_OPEN argument_expression_list_opt PARANTHESIS_CLOSE
   11                   | postfix_expression PERIOD IDENTIFIER
   12                   | postfix_expression ARROW IDENTIFIER
   13                   | postfix_expression INCREMENT
   14                   | postfix_expression DECREMENT
   15                   | PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

   17 argument_expression_list_opt: argument_expression_list
   18                             | ε

   19 argument_expression_list: assignment_expression
   20                         | argument_expression_list COMMA assignment_expression

   21 unary_expression: postfix_expression
   22                 | INCREMENT unary_expression
   23                 | DECREMENT unary_expression
   24                 | unary_operator cast_expression
   25                 | SIZEOF unary_expression
   26                 | SIZEOF PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE

   27 unary_operator: AMPERSAND
   28               | ASTERISK
   29               | PLUS
   30               | MINUS
   31               | TILDE
   32               | EXCLAMATION

   33 cast_expression: unary_expression
   34                | PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE cast_expression

   35 multiplicative_expression: cast_expression
   36                          | multiplicative_expression ASTERISK cast_expression
   37                          | multiplicative_expression SLASH cast_expression
   38                          | multiplicative_expression PERCENT cast_expression

   39 additive_expression: multiplicative_expression
   40                    | additive_expression PLUS multiplicative_expression
   41                    | additive_expression MINUS multiplicative_expression

   42 shift_expression: additive_expression
   43                 | shift_expression LEFT_SHIFT additive_expression
   44                 | shift_expression RIGHT_SHIFT additive_expression

   45 relational_expression: shift_expression
   46                      | relational_expression LESS_THAN shift_expression
   47                      | relational_expression GREATER_THAN shift_expression
   48                      | relational_expression LESS_THAN_EQUAL shift_expression
   49                      | relational_expression GREATER_THAN_EQUAL shift_expression

   50 equality_expression: relational_expression
   51                    | equality_expression EQUAL relational_expression
   52                    | equality_expression NOT_EQUAL relational_expression

   53 AND_expression: equality_expression
   54               | AND_expression AMPERSAND equality_expression

   55 exclusive_OR_expression: AND_expression
   56                        | exclusive_OR_expression CARET AND_expression

   57 inclusive_OR_expression: exclusive_OR_expression
   58                        | inclusive_OR_expression PIPE exclusive_OR_expression

   59 logical_AND_expression: inclusive_OR_expression
   60                       | logical_AND_expression LOGICAL_AND M inclusive_OR_expression

   61 logical_OR_expression: logical_AND_expression
   62                      | logical_OR_expression LOGICAL_OR M logical_AND_expression

   63 conditional_expression: logical_OR_expression
   64                       | logical_OR_expression N QUESTION M expression N COLON M conditional_expression

   65 M: ε

   66 N: ε

   67 assignment_expression: conditional_expression
   68                      | unary_expression assignment_operator assignment_expression

   69 assignment_operator: ASSIGN
   70                    | MULTIPLY_ASSIGN
   71                    | DIVIDE_ASSIGN
   72                    | MOD_ASSIGN
   73                    | PLUS_ASSIGN
   74                    | MINUS_ASSIGN
   75                    | LEFT_SHIFT_ASSIGN
   76                    | RIGHT_SHIFT_ASSIGN
   77                    | AND_ASSIGN
   78                    | XOR_ASSIGN
   79                    | OR_ASSIGN

   80 expression: assignment_expression
   81           | expression COMMA assignment_expression

   82 constant_expression: conditional_expression

   83 declaration: declaration_specifiers init_declarator_list SEMICOLON
   84            | declaration_specifiers SEMICOLON

   85 declaration_specifiers: storage_class_specifier declaration_specifiers
   86                       | storage_class_specifier
   87                       | type_specifier declaration_specifiers
   88                       | type_specifier
   89                       | type_qualifier declaration_specifiers
   90                       | type_qualifier
   91                       | function_specifier declaration_specifiers
   92                       | function_specifier

   93 init_declarator_list: init_declarator_list COMMA init_declarator
   94                     | init_declarator

   95 init_declarator: declarator
   96                | declarator ASSIGN initializer

   97 storage_class_specifier: EXTERN
   98                        | STATIC
   99                        | AUTO
  100                        | REGISTER

  101 type_specifier: VOID
  102               | CHAR
  103               | SHORT
  104               | INT
  105               | LONG
  106               | FLOAT
  107               | DOUBLE
  108               | SIGNED
  109               | UNSIGNED
  110               | BOOL
  111               | COMPLEX
  112               | IMAGINARY
  113               | enum_specifier

  114 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt
  115                         | type_qualifier specifier_qualifier_list_opt

  116 specifier_qualifier_list_opt: specifier_qualifier_list
  117                             | ε

  118 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
  119               | ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE
  120               | ENUM IDENTIFIER

  121 identifier_opt: IDENTIFIER
  122               | ε

  123 enumerator_list: enumerator
  124                | enumerator_list COMMA enumerator

  125 enumerator: IDENTIFIER
  126           | IDENTIFIER ASSIGN constant_expression

  127 type_qualifier: CONST
  128               | RESTRICT
  129               | VOLATILE

  130 function_specifier: INLINE

  131 declarator: pointer direct_declarator
  132           | direct_declarator

  133 direct_declarator: IDENTIFIER
  134                  | PARANTHESIS_OPEN declarator PARANTHESIS_CLOSE
  135                  | direct_declarator SQ_BRACKET_OPEN type_qualifier_list assignment_expression SQ_BRACKET_CLOSE
  136                  | direct_declarator SQ_BRACKET_OPEN type_qualifier_list SQ_BRACKET_CLOSE
  137                  | direct_declarator SQ_BRACKET_OPEN assignment_expression SQ_BRACKET_CLOSE
  138                  | direct_declarator SQ_BRACKET_OPEN SQ_BRACKET_CLOSE
  139                  | direct_declarator SQ_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQ_BRACKET_CLOSE
  140                  | direct_declarator SQ_BRACKET_OPEN STATIC assignment_expression SQ_BRACKET_CLOSE
  141                  | direct_declarator SQ_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQ_BRACKET_CLOSE
  142                  | direct_declarator SQ_BRACKET_OPEN type_qualifier_list ASTERISK SQ_BRACKET_CLOSE
  143                  | direct_declarator SQ_BRACKET_OPEN ASTERISK SQ_BRACKET_CLOSE
  144                  | direct_declarator PARANTHESIS_OPEN change_table parameter_type_list PARANTHESIS_CLOSE
  145                  | direct_declarator PARANTHESIS_OPEN identifier_list PARANTHESIS_CLOSE
  146                  | direct_declarator PARANTHESIS_OPEN change_table PARANTHESIS_CLOSE

  147 type_qualifier_list_opt: type_qualifier_list
  148                        | ε

  149 pointer: ASTERISK type_qualifier_list_opt
  150        | ASTERISK type_qualifier_list_opt pointer

  151 type_qualifier_list: type_qualifier
  152                    | type_qualifier_list type_qualifier

  153 parameter_type_list: parameter_list
  154                    | parameter_list COMMA ELLIPSIS

  155 parameter_list: parameter_declaration
  156               | parameter_list COMMA parameter_declaration

  157 parameter_declaration: declaration_specifiers declarator
  158                      | declaration_specifiers

  159 identifier_list: IDENTIFIER
  160                | identifier_list COMMA IDENTIFIER

  161 type_name: specifier_qualifier_list

  162 initializer: assignment_expression
  163            | CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
  164            | CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

  165 initializer_list: designation_opt initializer
  166                 | initializer_list COMMA designation_opt initializer

  167 designation_opt: designation
  168                | ε

  169 designation: designator_list ASSIGN

  170 designator_list: designator
  171                | designator_list designator

  172 designator: SQ_BRACKET_OPEN constant_expression SQ_BRACKET_CLOSE
  173           | PERIOD IDENTIFIER

  174 statement: labeled_statement
  175          | compound_statement
  176          | expression_statement
  177          | selection_statement
  178          | iteration_statement
  179          | jump_statement

  180 loop_statement: labeled_statement
  181               | expression_statement
  182               | selection_statement
  183               | iteration_statement
  184               | jump_statement

  185 labeled_statement: IDENTIFIER COLON statement
  186                  | CASE constant_expression COLON statement
  187                  | DEFAULT COLON statement

  188 compound_statement: CURLY_BRACKET_OPEN X change_table block_item_list_opt CURLY_BRACKET_CLOSE

  189 block_item_list_opt: block_item_list
  190                    | ε

  191 block_item_list: block_item
  192                | block_item_list M block_item

  193 block_item: declaration
  194           | statement

  195 expression_statement: expression SEMICOLON
  196                     | SEMICOLON

  197 selection_statement: IF PARANTHESIS_OPEN expression N PARANTHESIS_CLOSE M statement N
  198                    | IF PARANTHESIS_OPEN expression N PARANTHESIS_CLOSE M statement N ELSE M statement
  199                    | SWITCH PARANTHESIS_OPEN expression PARANTHESIS_CLOSE statement

  200 iteration_statement: WHILE W PARANTHESIS_OPEN X change_table M expression PARANTHESIS_CLOSE M loop_statement
  201                    | WHILE W PARANTHESIS_OPEN X change_table M expression PARANTHESIS_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE
  202                    | DO D M loop_statement M WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON
  203                    | DO D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON
  204                    | FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE M loop_statement
  205                    | FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M loop_statement
  206                    | FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  207                    | FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

  208 F: ε

  209 W: ε

  210 D: ε

  211 X: ε

  212 change_table: ε

  213 jump_statement: GOTO IDENTIFIER SEMICOLON
  214               | CONTINUE SEMICOLON
  215               | BREAK SEMICOLON
  216               | RETURN expression SEMICOLON
  217               | RETURN SEMICOLON

  218 translation_unit: external_declaration
  219                 | translation_unit external_declaration

  220 external_declaration: function_definition
  221                     | declaration

  222 function_definition: declaration_specifiers declarator declaration_list_opt change_table CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

  223 declaration_list_opt: declaration_list
  224                     | ε

  225 declaration_list: declaration
  226                 | declaration_list declaration


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AUTO (258) 99
    ENUM (259) 118 119 120
    RESTRICT (260) 128
    UNSIGNED (261) 109
    BREAK (262) 215
    EXTERN (263) 97
    RETURN (264) 216 217
    VOID (265) 101
    CASE (266) 186
    FLOAT (267) 106
    SHORT (268) 103
    VOLATILE (269) 129
    CHAR (270) 102
    FOR (271) 204 205 206 207
    SIGNED (272) 108
    WHILE (273) 200 201 202 203
    CONST (274) 127
    GOTO (275) 213
    SIZEOF (276) 25 26
    BOOL (277) 110
    CONTINUE (278) 214
    IF (279) 197 198
    STATIC (280) 98 139 140 141
    COMPLEX (281) 111
    DEFAULT (282) 187
    INLINE (283) 130
    STRUCT (284)
    IMAGINARY (285) 112
    DO (286) 202 203
    INT (287) 104
    SWITCH (288) 199
    DOUBLE (289) 107
    LONG (290) 105
    TYPEDEF (291)
    ELSE (292) 198
    REGISTER (293) 100
    UNION (294)
    INVALID_TOKEN (295)
    PARANTHESIS_OPEN (296) 4 10 15 16 26 34 134 144 145 146 197 198 199 200 201 202 203 204 205 206 207
    PARANTHESIS_CLOSE (297) 4 10 15 16 26 34 134 144 145 146 197 198 199 200 201 202 203 204 205 206 207
    SQ_BRACKET_OPEN (298) 9 135 136 137 138 139 140 141 142 143 172
    SQ_BRACKET_CLOSE (299) 9 135 136 137 138 139 140 141 142 143 172
    CURLY_BRACKET_OPEN (300) 15 16 118 119 163 164 188 201 203 206 207 222
    CURLY_BRACKET_CLOSE (301) 15 16 118 119 163 164 188 201 203 206 207 222
    PERIOD (302) 11 173
    ARROW (303) 12
    INCREMENT (304) 13 22
    DECREMENT (305) 14 23
    AMPERSAND (306) 27 54
    ASTERISK (307) 28 36 142 143 149 150
    PLUS (308) 29 40
    MINUS (309) 30 41
    TILDE (310) 31
    EXCLAMATION (311) 32
    SLASH (312) 37
    PERCENT (313) 38
    LEFT_SHIFT (314) 43
    RIGHT_SHIFT (315) 44
    LESS_THAN (316) 46
    GREATER_THAN (317) 47
    LESS_THAN_EQUAL (318) 48
    GREATER_THAN_EQUAL (319) 49
    EQUAL (320) 51
    NOT_EQUAL (321) 52
    CARET (322) 56
    PIPE (323) 58
    LOGICAL_AND (324) 60
    LOGICAL_OR (325) 62
    QUESTION (326) 64
    COLON (327) 64 185 186 187
    SEMICOLON (328) 83 84 195 196 202 203 213 214 215 216 217
    ELLIPSIS (329) 154
    ASSIGN (330) 69 96 126 169
    MULTIPLY_ASSIGN (331) 70
    DIVIDE_ASSIGN (332) 71
    MOD_ASSIGN (333) 72
    PLUS_ASSIGN (334) 73
    MINUS_ASSIGN (335) 74
    LEFT_SHIFT_ASSIGN (336) 75
    RIGHT_SHIFT_ASSIGN (337) 76
    AND_ASSIGN (338) 77
    ADD_ASSIGN (339)
    XOR_ASSIGN (340) 78
    OR_ASSIGN (341) 79
    COMMA (342) 16 20 81 93 119 124 154 156 160 164 166
    HASH (343)
    IDENTIFIER <symb> (344) 1 11 12 120 121 125 126 133 159 160 173 185 213
    CONSTANT_INT <iValue> (345) 5
    CONSTANT_FLOAT <sValue> (346) 6
    CONSTANT_CHAR <sValue> (347) 7
    LITERAL <sValue> (348) 3
    THEN (349)


Nonterminals, with rules where they appear

    $accept (95)
        on left: 0
    primary_expression <expr> (96)
        on left: 1 2 3 4
        on right: 8
    constant <symb> (97)
        on left: 5 6 7
        on right: 2
    postfix_expression <arr> (98)
        on left: 8 9 10 11 12 13 14 15 16
        on right: 9 10 11 12 13 14 21
    argument_expression_list_opt <param_count> (99)
        on left: 17 18
        on right: 10
    argument_expression_list <param_count> (100)
        on left: 19 20
        on right: 17 20
    unary_expression <arr> (101)
        on left: 21 22 23 24 25 26
        on right: 22 23 25 33 68
    unary_operator <unary_op> (102)
        on left: 27 28 29 30 31 32
        on right: 24
    cast_expression <arr> (103)
        on left: 33 34
        on right: 24 34 35 36 37 38
    multiplicative_expression <expr> (104)
        on left: 35 36 37 38
        on right: 36 37 38 39 40 41
    additive_expression <expr> (105)
        on left: 39 40 41
        on right: 40 41 42 43 44
    shift_expression <expr> (106)
        on left: 42 43 44
        on right: 43 44 45 46 47 48 49
    relational_expression <expr> (107)
        on left: 45 46 47 48 49
        on right: 46 47 48 49 50 51 52
    equality_expression <expr> (108)
        on left: 50 51 52
        on right: 51 52 53 54
    AND_expression <expr> (109)
        on left: 53 54
        on right: 54 55 56
    exclusive_OR_expression <expr> (110)
        on left: 55 56
        on right: 56 57 58
    inclusive_OR_expression <expr> (111)
        on left: 57 58
        on right: 58 59 60
    logical_AND_expression <expr> (112)
        on left: 59 60
        on right: 60 61 62
    logical_OR_expression <expr> (113)
        on left: 61 62
        on right: 62 63 64
    conditional_expression <expr> (114)
        on left: 63 64
        on right: 64 67 82
    M <instr_ind> (115)
        on left: 65
        on right: 60 62 64 192 197 198 200 201 202 203 204 205 206 207
    N <statem> (116)
        on left: 66
        on right: 64 197 198 204 205 206 207
    assignment_expression <expr> (117)
        on left: 67 68
        on right: 19 20 68 80 81 135 137 139 140 141 162
    assignment_operator (118)
        on left: 69 70 71 72 73 74 75 76 77 78 79
        on right: 68
    expression <expr> (119)
        on left: 80 81
        on right: 4 9 64 81 195 197 198 199 200 201 202 203 204 205 206 207 216
    constant_expression (120)
        on left: 82
        on right: 126 172 186
    declaration (121)
        on left: 83 84
        on right: 193 204 206 221 225 226
    declaration_specifiers (122)
        on left: 85 86 87 88 89 90 91 92
        on right: 83 84 85 87 89 91 157 158 222
    init_declarator_list (123)
        on left: 93 94
        on right: 83 93
    init_declarator <symb> (124)
        on left: 95 96
        on right: 93 94
    storage_class_specifier (125)
        on left: 97 98 99 100
        on right: 85 86
    type_specifier (126)
        on left: 101 102 103 104 105 106 107 108 109 110 111 112 113
        on right: 87 88 114
    specifier_qualifier_list (127)
        on left: 114 115
        on right: 116 161
    specifier_qualifier_list_opt (128)
        on left: 116 117
        on right: 114 115
    enum_specifier (129)
        on left: 118 119 120
        on right: 113
    identifier_opt (130)
        on left: 121 122
        on right: 118 119
    enumerator_list (131)
        on left: 123 124
        on right: 118 119 124
    enumerator (132)
        on left: 125 126
        on right: 123 124
    type_qualifier (133)
        on left: 127 128 129
        on right: 89 90 115 151 152
    function_specifier (134)
        on left: 130
        on right: 91 92
    declarator <symb> (135)
        on left: 131 132
        on right: 95 96 134 157 222
    direct_declarator <symb> (136)
        on left: 133 134 135 136 137 138 139 140 141 142 143 144 145 146
        on right: 131 132 135 136 137 138 139 140 141 142 143 144 145 146
    type_qualifier_list_opt (137)
        on left: 147 148
        on right: 149 150
    pointer <symbType> (138)
        on left: 149 150
        on right: 131 150
    type_qualifier_list (139)
        on left: 151 152
        on right: 135 136 139 141 142 147 152
    parameter_type_list (140)
        on left: 153 154
        on right: 144
    parameter_list (141)
        on left: 155 156
        on right: 153 154 156
    parameter_declaration (142)
        on left: 157 158
        on right: 155 156
    identifier_list (143)
        on left: 159 160
        on right: 145 160
    type_name (144)
        on left: 161
        on right: 15 16 26 34
    initializer <symb> (145)
        on left: 162 163 164
        on right: 96 165 166
    initializer_list (146)
        on left: 165 166
        on right: 15 16 163 164 166
    designation_opt (147)
        on left: 167 168
        on right: 165 166
    designation (148)
        on left: 169
        on right: 167
    designator_list (149)
        on left: 170 171
        on right: 169 171
    designator (150)
        on left: 172 173
        on right: 170 171
    statement <statem> (151)
        on left: 174 175 176 177 178 179
        on right: 185 186 187 194 197 198 199
    loop_statement <statem> (152)
        on left: 180 181 182 183 184
        on right: 200 202 204 205
    labeled_statement <statem> (153)
        on left: 185 186 187
        on right: 174 180
    compound_statement <statem> (154)
        on left: 188
        on right: 175
    block_item_list_opt <statem> (155)
        on left: 189 190
        on right: 188 201 203 206 207 222
    block_item_list <statem> (156)
        on left: 191 192
        on right: 189 192
    block_item <statem> (157)
        on left: 193 194
        on right: 191 192
    expression_statement <expr> (158)
        on left: 195 196
        on right: 176 181 204 205 206 207
    selection_statement <statem> (159)
        on left: 197 198 199
        on right: 177 182
    iteration_statement <statem> (160)
        on left: 200 201 202 203 204 205 206 207
        on right: 178 183
    F (161)
        on left: 208
        on right: 204 205 206 207
    W (162)
        on left: 209
        on right: 200 201
    D (163)
        on left: 210
        on right: 202 203
    X (164)
        on left: 211
        on right: 188 200 201 204 205 206 207
    change_table (165)
        on left: 212
        on right: 144 146 188 200 201 204 205 206 207 222
    jump_statement <statem> (166)
        on left: 213 214 215 216 217
        on right: 179 184
    translation_unit (167)
        on left: 218 219
        on right: 0 219
    external_declaration (168)
        on left: 220 221
        on right: 218 219
    function_definition (169)
        on left: 222
        on right: 220
    declaration_list_opt (170)
        on left: 223 224
        on right: 222
    declaration_list (171)
        on left: 225 226
        on right: 223 226


State 0

    0 $accept: • translation_unit $end

    AUTO       shift, and go to state 1
    ENUM       shift, and go to state 2
    RESTRICT   shift, and go to state 3
    UNSIGNED   shift, and go to state 4
    EXTERN     shift, and go to state 5
    VOID       shift, and go to state 6
    FLOAT      shift, and go to state 7
    SHORT      shift, and go to state 8
    VOLATILE   shift, and go to state 9
    CHAR       shift, and go to state 10
    SIGNED     shift, and go to state 11
    CONST      shift, and go to state 12
    BOOL       shift, and go to state 13
    STATIC     shift, and go to state 14
    COMPLEX    shift, and go to state 15
    INLINE     shift, and go to state 16
    IMAGINARY  shift, and go to state 17
    INT        shift, and go to state 18
    DOUBLE     shift, and go to state 19
    LONG       shift, and go to state 20
    REGISTER   shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    translation_unit         go to state 29
    external_declaration     go to state 30
    function_definition      go to state 31


State 1

   99 storage_class_specifier: AUTO •

    $default  reduce using rule 99 (storage_class_specifier)


State 2

  118 enum_specifier: ENUM • identifier_opt CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
  119               | ENUM • identifier_opt CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE
  120               | ENUM • IDENTIFIER

    IDENTIFIER  shift, and go to state 32

    $default  reduce using rule 122 (identifier_opt)

    identifier_opt  go to state 33


State 3

  128 type_qualifier: RESTRICT •

    $default  reduce using rule 128 (type_qualifier)


State 4

  109 type_specifier: UNSIGNED •

    $default  reduce using rule 109 (type_specifier)


State 5

   97 storage_class_specifier: EXTERN •

    $default  reduce using rule 97 (storage_class_specifier)


State 6

  101 type_specifier: VOID •

    $default  reduce using rule 101 (type_specifier)


State 7

  106 type_specifier: FLOAT •

    $default  reduce using rule 106 (type_specifier)


State 8

  103 type_specifier: SHORT •

    $default  reduce using rule 103 (type_specifier)


State 9

  129 type_qualifier: VOLATILE •

    $default  reduce using rule 129 (type_qualifier)


State 10

  102 type_specifier: CHAR •

    $default  reduce using rule 102 (type_specifier)


State 11

  108 type_specifier: SIGNED •

    $default  reduce using rule 108 (type_specifier)


State 12

  127 type_qualifier: CONST •

    $default  reduce using rule 127 (type_qualifier)


State 13

  110 type_specifier: BOOL •

    $default  reduce using rule 110 (type_specifier)


State 14

   98 storage_class_specifier: STATIC •

    $default  reduce using rule 98 (storage_class_specifier)


State 15

  111 type_specifier: COMPLEX •

    $default  reduce using rule 111 (type_specifier)


State 16

  130 function_specifier: INLINE •

    $default  reduce using rule 130 (function_specifier)


State 17

  112 type_specifier: IMAGINARY •

    $default  reduce using rule 112 (type_specifier)


State 18

  104 type_specifier: INT •

    $default  reduce using rule 104 (type_specifier)


State 19

  107 type_specifier: DOUBLE •

    $default  reduce using rule 107 (type_specifier)


State 20

  105 type_specifier: LONG •

    $default  reduce using rule 105 (type_specifier)


State 21

  100 storage_class_specifier: REGISTER •

    $default  reduce using rule 100 (storage_class_specifier)


State 22

  221 external_declaration: declaration •

    $default  reduce using rule 221 (external_declaration)


State 23

   83 declaration: declaration_specifiers • init_declarator_list SEMICOLON
   84            | declaration_specifiers • SEMICOLON
  222 function_definition: declaration_specifiers • declarator declaration_list_opt change_table CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    PARANTHESIS_OPEN  shift, and go to state 34
    ASTERISK          shift, and go to state 35
    SEMICOLON         shift, and go to state 36
    IDENTIFIER        shift, and go to state 37

    init_declarator_list  go to state 38
    init_declarator       go to state 39
    declarator            go to state 40
    direct_declarator     go to state 41
    pointer               go to state 42


State 24

   85 declaration_specifiers: storage_class_specifier • declaration_specifiers
   86                       | storage_class_specifier •

    AUTO       shift, and go to state 1
    ENUM       shift, and go to state 2
    RESTRICT   shift, and go to state 3
    UNSIGNED   shift, and go to state 4
    EXTERN     shift, and go to state 5
    VOID       shift, and go to state 6
    FLOAT      shift, and go to state 7
    SHORT      shift, and go to state 8
    VOLATILE   shift, and go to state 9
    CHAR       shift, and go to state 10
    SIGNED     shift, and go to state 11
    CONST      shift, and go to state 12
    BOOL       shift, and go to state 13
    STATIC     shift, and go to state 14
    COMPLEX    shift, and go to state 15
    INLINE     shift, and go to state 16
    IMAGINARY  shift, and go to state 17
    INT        shift, and go to state 18
    DOUBLE     shift, and go to state 19
    LONG       shift, and go to state 20
    REGISTER   shift, and go to state 21

    $default  reduce using rule 86 (declaration_specifiers)

    declaration_specifiers   go to state 43
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 25

   87 declaration_specifiers: type_specifier • declaration_specifiers
   88                       | type_specifier •

    AUTO       shift, and go to state 1
    ENUM       shift, and go to state 2
    RESTRICT   shift, and go to state 3
    UNSIGNED   shift, and go to state 4
    EXTERN     shift, and go to state 5
    VOID       shift, and go to state 6
    FLOAT      shift, and go to state 7
    SHORT      shift, and go to state 8
    VOLATILE   shift, and go to state 9
    CHAR       shift, and go to state 10
    SIGNED     shift, and go to state 11
    CONST      shift, and go to state 12
    BOOL       shift, and go to state 13
    STATIC     shift, and go to state 14
    COMPLEX    shift, and go to state 15
    INLINE     shift, and go to state 16
    IMAGINARY  shift, and go to state 17
    INT        shift, and go to state 18
    DOUBLE     shift, and go to state 19
    LONG       shift, and go to state 20
    REGISTER   shift, and go to state 21

    $default  reduce using rule 88 (declaration_specifiers)

    declaration_specifiers   go to state 44
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 26

  113 type_specifier: enum_specifier •

    $default  reduce using rule 113 (type_specifier)


State 27

   89 declaration_specifiers: type_qualifier • declaration_specifiers
   90                       | type_qualifier •

    AUTO       shift, and go to state 1
    ENUM       shift, and go to state 2
    RESTRICT   shift, and go to state 3
    UNSIGNED   shift, and go to state 4
    EXTERN     shift, and go to state 5
    VOID       shift, and go to state 6
    FLOAT      shift, and go to state 7
    SHORT      shift, and go to state 8
    VOLATILE   shift, and go to state 9
    CHAR       shift, and go to state 10
    SIGNED     shift, and go to state 11
    CONST      shift, and go to state 12
    BOOL       shift, and go to state 13
    STATIC     shift, and go to state 14
    COMPLEX    shift, and go to state 15
    INLINE     shift, and go to state 16
    IMAGINARY  shift, and go to state 17
    INT        shift, and go to state 18
    DOUBLE     shift, and go to state 19
    LONG       shift, and go to state 20
    REGISTER   shift, and go to state 21

    $default  reduce using rule 90 (declaration_specifiers)

    declaration_specifiers   go to state 45
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 28

   91 declaration_specifiers: function_specifier • declaration_specifiers
   92                       | function_specifier •

    AUTO       shift, and go to state 1
    ENUM       shift, and go to state 2
    RESTRICT   shift, and go to state 3
    UNSIGNED   shift, and go to state 4
    EXTERN     shift, and go to state 5
    VOID       shift, and go to state 6
    FLOAT      shift, and go to state 7
    SHORT      shift, and go to state 8
    VOLATILE   shift, and go to state 9
    CHAR       shift, and go to state 10
    SIGNED     shift, and go to state 11
    CONST      shift, and go to state 12
    BOOL       shift, and go to state 13
    STATIC     shift, and go to state 14
    COMPLEX    shift, and go to state 15
    INLINE     shift, and go to state 16
    IMAGINARY  shift, and go to state 17
    INT        shift, and go to state 18
    DOUBLE     shift, and go to state 19
    LONG       shift, and go to state 20
    REGISTER   shift, and go to state 21

    $default  reduce using rule 92 (declaration_specifiers)

    declaration_specifiers   go to state 46
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 29

    0 $accept: translation_unit • $end
  219 translation_unit: translation_unit • external_declaration

    $end       shift, and go to state 47
    AUTO       shift, and go to state 1
    ENUM       shift, and go to state 2
    RESTRICT   shift, and go to state 3
    UNSIGNED   shift, and go to state 4
    EXTERN     shift, and go to state 5
    VOID       shift, and go to state 6
    FLOAT      shift, and go to state 7
    SHORT      shift, and go to state 8
    VOLATILE   shift, and go to state 9
    CHAR       shift, and go to state 10
    SIGNED     shift, and go to state 11
    CONST      shift, and go to state 12
    BOOL       shift, and go to state 13
    STATIC     shift, and go to state 14
    COMPLEX    shift, and go to state 15
    INLINE     shift, and go to state 16
    IMAGINARY  shift, and go to state 17
    INT        shift, and go to state 18
    DOUBLE     shift, and go to state 19
    LONG       shift, and go to state 20
    REGISTER   shift, and go to state 21

    declaration              go to state 22
    declaration_specifiers   go to state 23
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    external_declaration     go to state 48
    function_definition      go to state 31


State 30

  218 translation_unit: external_declaration •

    $default  reduce using rule 218 (translation_unit)


State 31

  220 external_declaration: function_definition •

    $default  reduce using rule 220 (external_declaration)


State 32

  120 enum_specifier: ENUM IDENTIFIER •
  121 identifier_opt: IDENTIFIER •

    CURLY_BRACKET_OPEN  reduce using rule 121 (identifier_opt)
    $default            reduce using rule 120 (enum_specifier)


State 33

  118 enum_specifier: ENUM identifier_opt • CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE
  119               | ENUM identifier_opt • CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 49


State 34

  134 direct_declarator: PARANTHESIS_OPEN • declarator PARANTHESIS_CLOSE

    PARANTHESIS_OPEN  shift, and go to state 34
    ASTERISK          shift, and go to state 35
    IDENTIFIER        shift, and go to state 37

    declarator         go to state 50
    direct_declarator  go to state 41
    pointer            go to state 42


State 35

  149 pointer: ASTERISK • type_qualifier_list_opt
  150        | ASTERISK • type_qualifier_list_opt pointer

    RESTRICT  shift, and go to state 3
    VOLATILE  shift, and go to state 9
    CONST     shift, and go to state 12

    $default  reduce using rule 148 (type_qualifier_list_opt)

    type_qualifier           go to state 51
    type_qualifier_list_opt  go to state 52
    type_qualifier_list      go to state 53


State 36

   84 declaration: declaration_specifiers SEMICOLON •

    $default  reduce using rule 84 (declaration)


State 37

  133 direct_declarator: IDENTIFIER •

    $default  reduce using rule 133 (direct_declarator)


State 38

   83 declaration: declaration_specifiers init_declarator_list • SEMICOLON
   93 init_declarator_list: init_declarator_list • COMMA init_declarator

    SEMICOLON  shift, and go to state 54
    COMMA      shift, and go to state 55


State 39

   94 init_declarator_list: init_declarator •

    $default  reduce using rule 94 (init_declarator_list)


State 40

   95 init_declarator: declarator •
   96                | declarator • ASSIGN initializer
  222 function_definition: declaration_specifiers declarator • declaration_list_opt change_table CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO       shift, and go to state 1
    ENUM       shift, and go to state 2
    RESTRICT   shift, and go to state 3
    UNSIGNED   shift, and go to state 4
    EXTERN     shift, and go to state 5
    VOID       shift, and go to state 6
    FLOAT      shift, and go to state 7
    SHORT      shift, and go to state 8
    VOLATILE   shift, and go to state 9
    CHAR       shift, and go to state 10
    SIGNED     shift, and go to state 11
    CONST      shift, and go to state 12
    BOOL       shift, and go to state 13
    STATIC     shift, and go to state 14
    COMPLEX    shift, and go to state 15
    INLINE     shift, and go to state 16
    IMAGINARY  shift, and go to state 17
    INT        shift, and go to state 18
    DOUBLE     shift, and go to state 19
    LONG       shift, and go to state 20
    REGISTER   shift, and go to state 21
    ASSIGN     shift, and go to state 56

    CURLY_BRACKET_OPEN  reduce using rule 224 (declaration_list_opt)
    $default            reduce using rule 95 (init_declarator)

    declaration              go to state 57
    declaration_specifiers   go to state 58
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    declaration_list_opt     go to state 59
    declaration_list         go to state 60


State 41

  132 declarator: direct_declarator •
  135 direct_declarator: direct_declarator • SQ_BRACKET_OPEN type_qualifier_list assignment_expression SQ_BRACKET_CLOSE
  136                  | direct_declarator • SQ_BRACKET_OPEN type_qualifier_list SQ_BRACKET_CLOSE
  137                  | direct_declarator • SQ_BRACKET_OPEN assignment_expression SQ_BRACKET_CLOSE
  138                  | direct_declarator • SQ_BRACKET_OPEN SQ_BRACKET_CLOSE
  139                  | direct_declarator • SQ_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQ_BRACKET_CLOSE
  140                  | direct_declarator • SQ_BRACKET_OPEN STATIC assignment_expression SQ_BRACKET_CLOSE
  141                  | direct_declarator • SQ_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQ_BRACKET_CLOSE
  142                  | direct_declarator • SQ_BRACKET_OPEN type_qualifier_list ASTERISK SQ_BRACKET_CLOSE
  143                  | direct_declarator • SQ_BRACKET_OPEN ASTERISK SQ_BRACKET_CLOSE
  144                  | direct_declarator • PARANTHESIS_OPEN change_table parameter_type_list PARANTHESIS_CLOSE
  145                  | direct_declarator • PARANTHESIS_OPEN identifier_list PARANTHESIS_CLOSE
  146                  | direct_declarator • PARANTHESIS_OPEN change_table PARANTHESIS_CLOSE

    PARANTHESIS_OPEN  shift, and go to state 61
    SQ_BRACKET_OPEN   shift, and go to state 62

    $default  reduce using rule 132 (declarator)


State 42

  131 declarator: pointer • direct_declarator

    PARANTHESIS_OPEN  shift, and go to state 34
    IDENTIFIER        shift, and go to state 37

    direct_declarator  go to state 63


State 43

   85 declaration_specifiers: storage_class_specifier declaration_specifiers •

    $default  reduce using rule 85 (declaration_specifiers)


State 44

   87 declaration_specifiers: type_specifier declaration_specifiers •

    $default  reduce using rule 87 (declaration_specifiers)


State 45

   89 declaration_specifiers: type_qualifier declaration_specifiers •

    $default  reduce using rule 89 (declaration_specifiers)


State 46

   91 declaration_specifiers: function_specifier declaration_specifiers •

    $default  reduce using rule 91 (declaration_specifiers)


State 47

    0 $accept: translation_unit $end •

    $default  accept


State 48

  219 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 219 (translation_unit)


State 49

  118 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN • enumerator_list CURLY_BRACKET_CLOSE
  119               | ENUM identifier_opt CURLY_BRACKET_OPEN • enumerator_list COMMA CURLY_BRACKET_CLOSE

    IDENTIFIER  shift, and go to state 64

    enumerator_list  go to state 65
    enumerator       go to state 66


State 50

  134 direct_declarator: PARANTHESIS_OPEN declarator • PARANTHESIS_CLOSE

    PARANTHESIS_CLOSE  shift, and go to state 67


State 51

  151 type_qualifier_list: type_qualifier •

    $default  reduce using rule 151 (type_qualifier_list)


State 52

  149 pointer: ASTERISK type_qualifier_list_opt •
  150        | ASTERISK type_qualifier_list_opt • pointer

    ASTERISK  shift, and go to state 35

    $default  reduce using rule 149 (pointer)

    pointer  go to state 68


State 53

  147 type_qualifier_list_opt: type_qualifier_list •
  152 type_qualifier_list: type_qualifier_list • type_qualifier

    RESTRICT  shift, and go to state 3
    VOLATILE  shift, and go to state 9
    CONST     shift, and go to state 12

    $default  reduce using rule 147 (type_qualifier_list_opt)

    type_qualifier  go to state 69


State 54

   83 declaration: declaration_specifiers init_declarator_list SEMICOLON •

    $default  reduce using rule 83 (declaration)


State 55

   93 init_declarator_list: init_declarator_list COMMA • init_declarator

    PARANTHESIS_OPEN  shift, and go to state 34
    ASTERISK          shift, and go to state 35
    IDENTIFIER        shift, and go to state 37

    init_declarator    go to state 70
    declarator         go to state 71
    direct_declarator  go to state 41
    pointer            go to state 42


State 56

   96 init_declarator: declarator ASSIGN • initializer

    SIZEOF              shift, and go to state 72
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 74
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    IDENTIFIER          shift, and go to state 83
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 105
    initializer                go to state 106


State 57

  225 declaration_list: declaration •

    $default  reduce using rule 225 (declaration_list)


State 58

   83 declaration: declaration_specifiers • init_declarator_list SEMICOLON
   84            | declaration_specifiers • SEMICOLON

    PARANTHESIS_OPEN  shift, and go to state 34
    ASTERISK          shift, and go to state 35
    SEMICOLON         shift, and go to state 36
    IDENTIFIER        shift, and go to state 37

    init_declarator_list  go to state 38
    init_declarator       go to state 39
    declarator            go to state 71
    direct_declarator     go to state 41
    pointer               go to state 42


State 59

  222 function_definition: declaration_specifiers declarator declaration_list_opt • change_table CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 212 (change_table)

    change_table  go to state 107


State 60

  223 declaration_list_opt: declaration_list •
  226 declaration_list: declaration_list • declaration

    AUTO       shift, and go to state 1
    ENUM       shift, and go to state 2
    RESTRICT   shift, and go to state 3
    UNSIGNED   shift, and go to state 4
    EXTERN     shift, and go to state 5
    VOID       shift, and go to state 6
    FLOAT      shift, and go to state 7
    SHORT      shift, and go to state 8
    VOLATILE   shift, and go to state 9
    CHAR       shift, and go to state 10
    SIGNED     shift, and go to state 11
    CONST      shift, and go to state 12
    BOOL       shift, and go to state 13
    STATIC     shift, and go to state 14
    COMPLEX    shift, and go to state 15
    INLINE     shift, and go to state 16
    IMAGINARY  shift, and go to state 17
    INT        shift, and go to state 18
    DOUBLE     shift, and go to state 19
    LONG       shift, and go to state 20
    REGISTER   shift, and go to state 21

    $default  reduce using rule 223 (declaration_list_opt)

    declaration              go to state 108
    declaration_specifiers   go to state 58
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28


State 61

  144 direct_declarator: direct_declarator PARANTHESIS_OPEN • change_table parameter_type_list PARANTHESIS_CLOSE
  145                  | direct_declarator PARANTHESIS_OPEN • identifier_list PARANTHESIS_CLOSE
  146                  | direct_declarator PARANTHESIS_OPEN • change_table PARANTHESIS_CLOSE

    IDENTIFIER  shift, and go to state 109

    $default  reduce using rule 212 (change_table)

    identifier_list  go to state 110
    change_table     go to state 111


State 62

  135 direct_declarator: direct_declarator SQ_BRACKET_OPEN • type_qualifier_list assignment_expression SQ_BRACKET_CLOSE
  136                  | direct_declarator SQ_BRACKET_OPEN • type_qualifier_list SQ_BRACKET_CLOSE
  137                  | direct_declarator SQ_BRACKET_OPEN • assignment_expression SQ_BRACKET_CLOSE
  138                  | direct_declarator SQ_BRACKET_OPEN • SQ_BRACKET_CLOSE
  139                  | direct_declarator SQ_BRACKET_OPEN • STATIC type_qualifier_list assignment_expression SQ_BRACKET_CLOSE
  140                  | direct_declarator SQ_BRACKET_OPEN • STATIC assignment_expression SQ_BRACKET_CLOSE
  141                  | direct_declarator SQ_BRACKET_OPEN • type_qualifier_list STATIC assignment_expression SQ_BRACKET_CLOSE
  142                  | direct_declarator SQ_BRACKET_OPEN • type_qualifier_list ASTERISK SQ_BRACKET_CLOSE
  143                  | direct_declarator SQ_BRACKET_OPEN • ASTERISK SQ_BRACKET_CLOSE

    RESTRICT          shift, and go to state 3
    VOLATILE          shift, and go to state 9
    CONST             shift, and go to state 12
    SIZEOF            shift, and go to state 72
    STATIC            shift, and go to state 112
    PARANTHESIS_OPEN  shift, and go to state 73
    SQ_BRACKET_CLOSE  shift, and go to state 113
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 114
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 115
    type_qualifier             go to state 51
    type_qualifier_list        go to state 116


State 63

  131 declarator: pointer direct_declarator •
  135 direct_declarator: direct_declarator • SQ_BRACKET_OPEN type_qualifier_list assignment_expression SQ_BRACKET_CLOSE
  136                  | direct_declarator • SQ_BRACKET_OPEN type_qualifier_list SQ_BRACKET_CLOSE
  137                  | direct_declarator • SQ_BRACKET_OPEN assignment_expression SQ_BRACKET_CLOSE
  138                  | direct_declarator • SQ_BRACKET_OPEN SQ_BRACKET_CLOSE
  139                  | direct_declarator • SQ_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQ_BRACKET_CLOSE
  140                  | direct_declarator • SQ_BRACKET_OPEN STATIC assignment_expression SQ_BRACKET_CLOSE
  141                  | direct_declarator • SQ_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQ_BRACKET_CLOSE
  142                  | direct_declarator • SQ_BRACKET_OPEN type_qualifier_list ASTERISK SQ_BRACKET_CLOSE
  143                  | direct_declarator • SQ_BRACKET_OPEN ASTERISK SQ_BRACKET_CLOSE
  144                  | direct_declarator • PARANTHESIS_OPEN change_table parameter_type_list PARANTHESIS_CLOSE
  145                  | direct_declarator • PARANTHESIS_OPEN identifier_list PARANTHESIS_CLOSE
  146                  | direct_declarator • PARANTHESIS_OPEN change_table PARANTHESIS_CLOSE

    PARANTHESIS_OPEN  shift, and go to state 61
    SQ_BRACKET_OPEN   shift, and go to state 62

    $default  reduce using rule 131 (declarator)


State 64

  125 enumerator: IDENTIFIER •
  126           | IDENTIFIER • ASSIGN constant_expression

    ASSIGN  shift, and go to state 117

    $default  reduce using rule 125 (enumerator)


State 65

  118 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list • CURLY_BRACKET_CLOSE
  119               | ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list • COMMA CURLY_BRACKET_CLOSE
  124 enumerator_list: enumerator_list • COMMA enumerator

    CURLY_BRACKET_CLOSE  shift, and go to state 118
    COMMA                shift, and go to state 119


State 66

  123 enumerator_list: enumerator •

    $default  reduce using rule 123 (enumerator_list)


State 67

  134 direct_declarator: PARANTHESIS_OPEN declarator PARANTHESIS_CLOSE •

    $default  reduce using rule 134 (direct_declarator)


State 68

  150 pointer: ASTERISK type_qualifier_list_opt pointer •

    $default  reduce using rule 150 (pointer)


State 69

  152 type_qualifier_list: type_qualifier_list type_qualifier •

    $default  reduce using rule 152 (type_qualifier_list)


State 70

   93 init_declarator_list: init_declarator_list COMMA init_declarator •

    $default  reduce using rule 93 (init_declarator_list)


State 71

   95 init_declarator: declarator •
   96                | declarator • ASSIGN initializer

    ASSIGN  shift, and go to state 56

    $default  reduce using rule 95 (init_declarator)


State 72

   25 unary_expression: SIZEOF • unary_expression
   26                 | SIZEOF • PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 120
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression  go to state 88
    constant            go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 121
    unary_operator      go to state 92


State 73

    4 primary_expression: PARANTHESIS_OPEN • expression PARANTHESIS_CLOSE
   15 postfix_expression: PARANTHESIS_OPEN • type_name PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | PARANTHESIS_OPEN • type_name PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   34 cast_expression: PARANTHESIS_OPEN • type_name PARANTHESIS_CLOSE cast_expression

    ENUM              shift, and go to state 2
    RESTRICT          shift, and go to state 3
    UNSIGNED          shift, and go to state 4
    VOID              shift, and go to state 6
    FLOAT             shift, and go to state 7
    SHORT             shift, and go to state 8
    VOLATILE          shift, and go to state 9
    CHAR              shift, and go to state 10
    SIGNED            shift, and go to state 11
    CONST             shift, and go to state 12
    SIZEOF            shift, and go to state 72
    BOOL              shift, and go to state 13
    COMPLEX           shift, and go to state 15
    IMAGINARY         shift, and go to state 17
    INT               shift, and go to state 18
    DOUBLE            shift, and go to state 19
    LONG              shift, and go to state 20
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 123
    type_specifier             go to state 124
    specifier_qualifier_list   go to state 125
    enum_specifier             go to state 26
    type_qualifier             go to state 126
    type_name                  go to state 127


State 74

  163 initializer: CURLY_BRACKET_OPEN • initializer_list CURLY_BRACKET_CLOSE
  164            | CURLY_BRACKET_OPEN • initializer_list COMMA CURLY_BRACKET_CLOSE

    SQ_BRACKET_OPEN  shift, and go to state 128
    PERIOD           shift, and go to state 129

    $default  reduce using rule 168 (designation_opt)

    initializer_list  go to state 130
    designation_opt   go to state 131
    designation       go to state 132
    designator_list   go to state 133
    designator        go to state 134


State 75

   22 unary_expression: INCREMENT • unary_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 135
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression  go to state 88
    constant            go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 136
    unary_operator      go to state 92


State 76

   23 unary_expression: DECREMENT • unary_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 135
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression  go to state 88
    constant            go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 137
    unary_operator      go to state 92


State 77

   27 unary_operator: AMPERSAND •

    $default  reduce using rule 27 (unary_operator)


State 78

   28 unary_operator: ASTERISK •

    $default  reduce using rule 28 (unary_operator)


State 79

   29 unary_operator: PLUS •

    $default  reduce using rule 29 (unary_operator)


State 80

   30 unary_operator: MINUS •

    $default  reduce using rule 30 (unary_operator)


State 81

   31 unary_operator: TILDE •

    $default  reduce using rule 31 (unary_operator)


State 82

   32 unary_operator: EXCLAMATION •

    $default  reduce using rule 32 (unary_operator)


State 83

    1 primary_expression: IDENTIFIER •

    $default  reduce using rule 1 (primary_expression)


State 84

    5 constant: CONSTANT_INT •

    $default  reduce using rule 5 (constant)


State 85

    6 constant: CONSTANT_FLOAT •

    $default  reduce using rule 6 (constant)


State 86

    7 constant: CONSTANT_CHAR •

    $default  reduce using rule 7 (constant)


State 87

    3 primary_expression: LITERAL •

    $default  reduce using rule 3 (primary_expression)


State 88

    8 postfix_expression: primary_expression •

    $default  reduce using rule 8 (postfix_expression)


State 89

    2 primary_expression: constant •

    $default  reduce using rule 2 (primary_expression)


State 90

    9 postfix_expression: postfix_expression • SQ_BRACKET_OPEN expression SQ_BRACKET_CLOSE
   10                   | postfix_expression • PARANTHESIS_OPEN argument_expression_list_opt PARANTHESIS_CLOSE
   11                   | postfix_expression • PERIOD IDENTIFIER
   12                   | postfix_expression • ARROW IDENTIFIER
   13                   | postfix_expression • INCREMENT
   14                   | postfix_expression • DECREMENT
   21 unary_expression: postfix_expression •

    PARANTHESIS_OPEN  shift, and go to state 138
    SQ_BRACKET_OPEN   shift, and go to state 139
    PERIOD            shift, and go to state 140
    ARROW             shift, and go to state 141
    INCREMENT         shift, and go to state 142
    DECREMENT         shift, and go to state 143

    $default  reduce using rule 21 (unary_expression)


State 91

   33 cast_expression: unary_expression •
   68 assignment_expression: unary_expression • assignment_operator assignment_expression

    ASSIGN              shift, and go to state 144
    MULTIPLY_ASSIGN     shift, and go to state 145
    DIVIDE_ASSIGN       shift, and go to state 146
    MOD_ASSIGN          shift, and go to state 147
    PLUS_ASSIGN         shift, and go to state 148
    MINUS_ASSIGN        shift, and go to state 149
    LEFT_SHIFT_ASSIGN   shift, and go to state 150
    RIGHT_SHIFT_ASSIGN  shift, and go to state 151
    AND_ASSIGN          shift, and go to state 152
    XOR_ASSIGN          shift, and go to state 153
    OR_ASSIGN           shift, and go to state 154

    $default  reduce using rule 33 (cast_expression)

    assignment_operator  go to state 155


State 92

   24 unary_expression: unary_operator • cast_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression  go to state 88
    constant            go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 156
    unary_operator      go to state 92
    cast_expression     go to state 157


State 93

   35 multiplicative_expression: cast_expression •

    $default  reduce using rule 35 (multiplicative_expression)


State 94

   36 multiplicative_expression: multiplicative_expression • ASTERISK cast_expression
   37                          | multiplicative_expression • SLASH cast_expression
   38                          | multiplicative_expression • PERCENT cast_expression
   39 additive_expression: multiplicative_expression •

    ASTERISK  shift, and go to state 158
    SLASH     shift, and go to state 159
    PERCENT   shift, and go to state 160

    $default  reduce using rule 39 (additive_expression)


State 95

   40 additive_expression: additive_expression • PLUS multiplicative_expression
   41                    | additive_expression • MINUS multiplicative_expression
   42 shift_expression: additive_expression •

    PLUS   shift, and go to state 161
    MINUS  shift, and go to state 162

    $default  reduce using rule 42 (shift_expression)


State 96

   43 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   44                 | shift_expression • RIGHT_SHIFT additive_expression
   45 relational_expression: shift_expression •

    LEFT_SHIFT   shift, and go to state 163
    RIGHT_SHIFT  shift, and go to state 164

    $default  reduce using rule 45 (relational_expression)


State 97

   46 relational_expression: relational_expression • LESS_THAN shift_expression
   47                      | relational_expression • GREATER_THAN shift_expression
   48                      | relational_expression • LESS_THAN_EQUAL shift_expression
   49                      | relational_expression • GREATER_THAN_EQUAL shift_expression
   50 equality_expression: relational_expression •

    LESS_THAN           shift, and go to state 165
    GREATER_THAN        shift, and go to state 166
    LESS_THAN_EQUAL     shift, and go to state 167
    GREATER_THAN_EQUAL  shift, and go to state 168

    $default  reduce using rule 50 (equality_expression)


State 98

   51 equality_expression: equality_expression • EQUAL relational_expression
   52                    | equality_expression • NOT_EQUAL relational_expression
   53 AND_expression: equality_expression •

    EQUAL      shift, and go to state 169
    NOT_EQUAL  shift, and go to state 170

    $default  reduce using rule 53 (AND_expression)


State 99

   54 AND_expression: AND_expression • AMPERSAND equality_expression
   55 exclusive_OR_expression: AND_expression •

    AMPERSAND  shift, and go to state 171

    $default  reduce using rule 55 (exclusive_OR_expression)


State 100

   56 exclusive_OR_expression: exclusive_OR_expression • CARET AND_expression
   57 inclusive_OR_expression: exclusive_OR_expression •

    CARET  shift, and go to state 172

    $default  reduce using rule 57 (inclusive_OR_expression)


State 101

   58 inclusive_OR_expression: inclusive_OR_expression • PIPE exclusive_OR_expression
   59 logical_AND_expression: inclusive_OR_expression •

    PIPE  shift, and go to state 173

    $default  reduce using rule 59 (logical_AND_expression)


State 102

   60 logical_AND_expression: logical_AND_expression • LOGICAL_AND M inclusive_OR_expression
   61 logical_OR_expression: logical_AND_expression •

    LOGICAL_AND  shift, and go to state 174

    $default  reduce using rule 61 (logical_OR_expression)


State 103

   62 logical_OR_expression: logical_OR_expression • LOGICAL_OR M logical_AND_expression
   63 conditional_expression: logical_OR_expression •
   64                       | logical_OR_expression • N QUESTION M expression N COLON M conditional_expression

    LOGICAL_OR  shift, and go to state 175

    QUESTION  reduce using rule 66 (N)
    $default  reduce using rule 63 (conditional_expression)

    N  go to state 176


State 104

   67 assignment_expression: conditional_expression •

    $default  reduce using rule 67 (assignment_expression)


State 105

  162 initializer: assignment_expression •

    $default  reduce using rule 162 (initializer)


State 106

   96 init_declarator: declarator ASSIGN initializer •

    $default  reduce using rule 96 (init_declarator)


State 107

  222 function_definition: declaration_specifiers declarator declaration_list_opt change_table • CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 177


State 108

  226 declaration_list: declaration_list declaration •

    $default  reduce using rule 226 (declaration_list)


State 109

  159 identifier_list: IDENTIFIER •

    $default  reduce using rule 159 (identifier_list)


State 110

  145 direct_declarator: direct_declarator PARANTHESIS_OPEN identifier_list • PARANTHESIS_CLOSE
  160 identifier_list: identifier_list • COMMA IDENTIFIER

    PARANTHESIS_CLOSE  shift, and go to state 178
    COMMA              shift, and go to state 179


State 111

  144 direct_declarator: direct_declarator PARANTHESIS_OPEN change_table • parameter_type_list PARANTHESIS_CLOSE
  146                  | direct_declarator PARANTHESIS_OPEN change_table • PARANTHESIS_CLOSE

    AUTO               shift, and go to state 1
    ENUM               shift, and go to state 2
    RESTRICT           shift, and go to state 3
    UNSIGNED           shift, and go to state 4
    EXTERN             shift, and go to state 5
    VOID               shift, and go to state 6
    FLOAT              shift, and go to state 7
    SHORT              shift, and go to state 8
    VOLATILE           shift, and go to state 9
    CHAR               shift, and go to state 10
    SIGNED             shift, and go to state 11
    CONST              shift, and go to state 12
    BOOL               shift, and go to state 13
    STATIC             shift, and go to state 14
    COMPLEX            shift, and go to state 15
    INLINE             shift, and go to state 16
    IMAGINARY          shift, and go to state 17
    INT                shift, and go to state 18
    DOUBLE             shift, and go to state 19
    LONG               shift, and go to state 20
    REGISTER           shift, and go to state 21
    PARANTHESIS_CLOSE  shift, and go to state 180

    declaration_specifiers   go to state 181
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_type_list      go to state 182
    parameter_list           go to state 183
    parameter_declaration    go to state 184


State 112

  139 direct_declarator: direct_declarator SQ_BRACKET_OPEN STATIC • type_qualifier_list assignment_expression SQ_BRACKET_CLOSE
  140                  | direct_declarator SQ_BRACKET_OPEN STATIC • assignment_expression SQ_BRACKET_CLOSE

    RESTRICT          shift, and go to state 3
    VOLATILE          shift, and go to state 9
    CONST             shift, and go to state 12
    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 185
    type_qualifier             go to state 51
    type_qualifier_list        go to state 186


State 113

  138 direct_declarator: direct_declarator SQ_BRACKET_OPEN SQ_BRACKET_CLOSE •

    $default  reduce using rule 138 (direct_declarator)


State 114

   28 unary_operator: ASTERISK •
  143 direct_declarator: direct_declarator SQ_BRACKET_OPEN ASTERISK • SQ_BRACKET_CLOSE

    SQ_BRACKET_CLOSE  shift, and go to state 187

    $default  reduce using rule 28 (unary_operator)


State 115

  137 direct_declarator: direct_declarator SQ_BRACKET_OPEN assignment_expression • SQ_BRACKET_CLOSE

    SQ_BRACKET_CLOSE  shift, and go to state 188


State 116

  135 direct_declarator: direct_declarator SQ_BRACKET_OPEN type_qualifier_list • assignment_expression SQ_BRACKET_CLOSE
  136                  | direct_declarator SQ_BRACKET_OPEN type_qualifier_list • SQ_BRACKET_CLOSE
  141                  | direct_declarator SQ_BRACKET_OPEN type_qualifier_list • STATIC assignment_expression SQ_BRACKET_CLOSE
  142                  | direct_declarator SQ_BRACKET_OPEN type_qualifier_list • ASTERISK SQ_BRACKET_CLOSE
  152 type_qualifier_list: type_qualifier_list • type_qualifier

    RESTRICT          shift, and go to state 3
    VOLATILE          shift, and go to state 9
    CONST             shift, and go to state 12
    SIZEOF            shift, and go to state 72
    STATIC            shift, and go to state 189
    PARANTHESIS_OPEN  shift, and go to state 73
    SQ_BRACKET_CLOSE  shift, and go to state 190
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 191
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 192
    type_qualifier             go to state 69


State 117

  126 enumerator: IDENTIFIER ASSIGN • constant_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 193
    constant_expression        go to state 194


State 118

  118 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list CURLY_BRACKET_CLOSE •

    $default  reduce using rule 118 (enum_specifier)


State 119

  119 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list COMMA • CURLY_BRACKET_CLOSE
  124 enumerator_list: enumerator_list COMMA • enumerator

    CURLY_BRACKET_CLOSE  shift, and go to state 195
    IDENTIFIER           shift, and go to state 64

    enumerator  go to state 196


State 120

    4 primary_expression: PARANTHESIS_OPEN • expression PARANTHESIS_CLOSE
   15 postfix_expression: PARANTHESIS_OPEN • type_name PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | PARANTHESIS_OPEN • type_name PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   26 unary_expression: SIZEOF PARANTHESIS_OPEN • type_name PARANTHESIS_CLOSE

    ENUM              shift, and go to state 2
    RESTRICT          shift, and go to state 3
    UNSIGNED          shift, and go to state 4
    VOID              shift, and go to state 6
    FLOAT             shift, and go to state 7
    SHORT             shift, and go to state 8
    VOLATILE          shift, and go to state 9
    CHAR              shift, and go to state 10
    SIGNED            shift, and go to state 11
    CONST             shift, and go to state 12
    SIZEOF            shift, and go to state 72
    BOOL              shift, and go to state 13
    COMPLEX           shift, and go to state 15
    IMAGINARY         shift, and go to state 17
    INT               shift, and go to state 18
    DOUBLE            shift, and go to state 19
    LONG              shift, and go to state 20
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 123
    type_specifier             go to state 124
    specifier_qualifier_list   go to state 125
    enum_specifier             go to state 26
    type_qualifier             go to state 126
    type_name                  go to state 197


State 121

   25 unary_expression: SIZEOF unary_expression •

    $default  reduce using rule 25 (unary_expression)


State 122

   80 expression: assignment_expression •

    $default  reduce using rule 80 (expression)


State 123

    4 primary_expression: PARANTHESIS_OPEN expression • PARANTHESIS_CLOSE
   81 expression: expression • COMMA assignment_expression

    PARANTHESIS_CLOSE  shift, and go to state 198
    COMMA              shift, and go to state 199


State 124

  114 specifier_qualifier_list: type_specifier • specifier_qualifier_list_opt

    ENUM       shift, and go to state 2
    RESTRICT   shift, and go to state 3
    UNSIGNED   shift, and go to state 4
    VOID       shift, and go to state 6
    FLOAT      shift, and go to state 7
    SHORT      shift, and go to state 8
    VOLATILE   shift, and go to state 9
    CHAR       shift, and go to state 10
    SIGNED     shift, and go to state 11
    CONST      shift, and go to state 12
    BOOL       shift, and go to state 13
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 17
    INT        shift, and go to state 18
    DOUBLE     shift, and go to state 19
    LONG       shift, and go to state 20

    $default  reduce using rule 117 (specifier_qualifier_list_opt)

    type_specifier                go to state 124
    specifier_qualifier_list      go to state 200
    specifier_qualifier_list_opt  go to state 201
    enum_specifier                go to state 26
    type_qualifier                go to state 126


State 125

  161 type_name: specifier_qualifier_list •

    $default  reduce using rule 161 (type_name)


State 126

  115 specifier_qualifier_list: type_qualifier • specifier_qualifier_list_opt

    ENUM       shift, and go to state 2
    RESTRICT   shift, and go to state 3
    UNSIGNED   shift, and go to state 4
    VOID       shift, and go to state 6
    FLOAT      shift, and go to state 7
    SHORT      shift, and go to state 8
    VOLATILE   shift, and go to state 9
    CHAR       shift, and go to state 10
    SIGNED     shift, and go to state 11
    CONST      shift, and go to state 12
    BOOL       shift, and go to state 13
    COMPLEX    shift, and go to state 15
    IMAGINARY  shift, and go to state 17
    INT        shift, and go to state 18
    DOUBLE     shift, and go to state 19
    LONG       shift, and go to state 20

    $default  reduce using rule 117 (specifier_qualifier_list_opt)

    type_specifier                go to state 124
    specifier_qualifier_list      go to state 200
    specifier_qualifier_list_opt  go to state 202
    enum_specifier                go to state 26
    type_qualifier                go to state 126


State 127

   15 postfix_expression: PARANTHESIS_OPEN type_name • PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | PARANTHESIS_OPEN type_name • PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   34 cast_expression: PARANTHESIS_OPEN type_name • PARANTHESIS_CLOSE cast_expression

    PARANTHESIS_CLOSE  shift, and go to state 203


State 128

  172 designator: SQ_BRACKET_OPEN • constant_expression SQ_BRACKET_CLOSE

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 193
    constant_expression        go to state 204


State 129

  173 designator: PERIOD • IDENTIFIER

    IDENTIFIER  shift, and go to state 205


State 130

  163 initializer: CURLY_BRACKET_OPEN initializer_list • CURLY_BRACKET_CLOSE
  164            | CURLY_BRACKET_OPEN initializer_list • COMMA CURLY_BRACKET_CLOSE
  166 initializer_list: initializer_list • COMMA designation_opt initializer

    CURLY_BRACKET_CLOSE  shift, and go to state 206
    COMMA                shift, and go to state 207


State 131

  165 initializer_list: designation_opt • initializer

    SIZEOF              shift, and go to state 72
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 74
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    IDENTIFIER          shift, and go to state 83
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 105
    initializer                go to state 208


State 132

  167 designation_opt: designation •

    $default  reduce using rule 167 (designation_opt)


State 133

  169 designation: designator_list • ASSIGN
  171 designator_list: designator_list • designator

    SQ_BRACKET_OPEN  shift, and go to state 128
    PERIOD           shift, and go to state 129
    ASSIGN           shift, and go to state 209

    designator  go to state 210


State 134

  170 designator_list: designator •

    $default  reduce using rule 170 (designator_list)


State 135

    4 primary_expression: PARANTHESIS_OPEN • expression PARANTHESIS_CLOSE
   15 postfix_expression: PARANTHESIS_OPEN • type_name PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | PARANTHESIS_OPEN • type_name PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    ENUM              shift, and go to state 2
    RESTRICT          shift, and go to state 3
    UNSIGNED          shift, and go to state 4
    VOID              shift, and go to state 6
    FLOAT             shift, and go to state 7
    SHORT             shift, and go to state 8
    VOLATILE          shift, and go to state 9
    CHAR              shift, and go to state 10
    SIGNED            shift, and go to state 11
    CONST             shift, and go to state 12
    SIZEOF            shift, and go to state 72
    BOOL              shift, and go to state 13
    COMPLEX           shift, and go to state 15
    IMAGINARY         shift, and go to state 17
    INT               shift, and go to state 18
    DOUBLE            shift, and go to state 19
    LONG              shift, and go to state 20
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 123
    type_specifier             go to state 124
    specifier_qualifier_list   go to state 125
    enum_specifier             go to state 26
    type_qualifier             go to state 126
    type_name                  go to state 211


State 136

   22 unary_expression: INCREMENT unary_expression •

    $default  reduce using rule 22 (unary_expression)


State 137

   23 unary_expression: DECREMENT unary_expression •

    $default  reduce using rule 23 (unary_expression)


State 138

   10 postfix_expression: postfix_expression PARANTHESIS_OPEN • argument_expression_list_opt PARANTHESIS_CLOSE

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    $default  reduce using rule 18 (argument_expression_list_opt)

    primary_expression            go to state 88
    constant                      go to state 89
    postfix_expression            go to state 90
    argument_expression_list_opt  go to state 212
    argument_expression_list      go to state 213
    unary_expression              go to state 91
    unary_operator                go to state 92
    cast_expression               go to state 93
    multiplicative_expression     go to state 94
    additive_expression           go to state 95
    shift_expression              go to state 96
    relational_expression         go to state 97
    equality_expression           go to state 98
    AND_expression                go to state 99
    exclusive_OR_expression       go to state 100
    inclusive_OR_expression       go to state 101
    logical_AND_expression        go to state 102
    logical_OR_expression         go to state 103
    conditional_expression        go to state 104
    assignment_expression         go to state 214


State 139

    9 postfix_expression: postfix_expression SQ_BRACKET_OPEN • expression SQ_BRACKET_CLOSE

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 215


State 140

   11 postfix_expression: postfix_expression PERIOD • IDENTIFIER

    IDENTIFIER  shift, and go to state 216


State 141

   12 postfix_expression: postfix_expression ARROW • IDENTIFIER

    IDENTIFIER  shift, and go to state 217


State 142

   13 postfix_expression: postfix_expression INCREMENT •

    $default  reduce using rule 13 (postfix_expression)


State 143

   14 postfix_expression: postfix_expression DECREMENT •

    $default  reduce using rule 14 (postfix_expression)


State 144

   69 assignment_operator: ASSIGN •

    $default  reduce using rule 69 (assignment_operator)


State 145

   70 assignment_operator: MULTIPLY_ASSIGN •

    $default  reduce using rule 70 (assignment_operator)


State 146

   71 assignment_operator: DIVIDE_ASSIGN •

    $default  reduce using rule 71 (assignment_operator)


State 147

   72 assignment_operator: MOD_ASSIGN •

    $default  reduce using rule 72 (assignment_operator)


State 148

   73 assignment_operator: PLUS_ASSIGN •

    $default  reduce using rule 73 (assignment_operator)


State 149

   74 assignment_operator: MINUS_ASSIGN •

    $default  reduce using rule 74 (assignment_operator)


State 150

   75 assignment_operator: LEFT_SHIFT_ASSIGN •

    $default  reduce using rule 75 (assignment_operator)


State 151

   76 assignment_operator: RIGHT_SHIFT_ASSIGN •

    $default  reduce using rule 76 (assignment_operator)


State 152

   77 assignment_operator: AND_ASSIGN •

    $default  reduce using rule 77 (assignment_operator)


State 153

   78 assignment_operator: XOR_ASSIGN •

    $default  reduce using rule 78 (assignment_operator)


State 154

   79 assignment_operator: OR_ASSIGN •

    $default  reduce using rule 79 (assignment_operator)


State 155

   68 assignment_expression: unary_expression assignment_operator • assignment_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 218


State 156

   33 cast_expression: unary_expression •

    $default  reduce using rule 33 (cast_expression)


State 157

   24 unary_expression: unary_operator cast_expression •

    $default  reduce using rule 24 (unary_expression)


State 158

   36 multiplicative_expression: multiplicative_expression ASTERISK • cast_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression  go to state 88
    constant            go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 156
    unary_operator      go to state 92
    cast_expression     go to state 219


State 159

   37 multiplicative_expression: multiplicative_expression SLASH • cast_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression  go to state 88
    constant            go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 156
    unary_operator      go to state 92
    cast_expression     go to state 220


State 160

   38 multiplicative_expression: multiplicative_expression PERCENT • cast_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression  go to state 88
    constant            go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 156
    unary_operator      go to state 92
    cast_expression     go to state 221


State 161

   40 additive_expression: additive_expression PLUS • multiplicative_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 222


State 162

   41 additive_expression: additive_expression MINUS • multiplicative_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 223


State 163

   43 shift_expression: shift_expression LEFT_SHIFT • additive_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 224


State 164

   44 shift_expression: shift_expression RIGHT_SHIFT • additive_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 225


State 165

   46 relational_expression: relational_expression LESS_THAN • shift_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 226


State 166

   47 relational_expression: relational_expression GREATER_THAN • shift_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 227


State 167

   48 relational_expression: relational_expression LESS_THAN_EQUAL • shift_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 228


State 168

   49 relational_expression: relational_expression GREATER_THAN_EQUAL • shift_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 229


State 169

   51 equality_expression: equality_expression EQUAL • relational_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 230


State 170

   52 equality_expression: equality_expression NOT_EQUAL • relational_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 231


State 171

   54 AND_expression: AND_expression AMPERSAND • equality_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 232


State 172

   56 exclusive_OR_expression: exclusive_OR_expression CARET • AND_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 233


State 173

   58 inclusive_OR_expression: inclusive_OR_expression PIPE • exclusive_OR_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 234


State 174

   60 logical_AND_expression: logical_AND_expression LOGICAL_AND • M inclusive_OR_expression

    $default  reduce using rule 65 (M)

    M  go to state 235


State 175

   62 logical_OR_expression: logical_OR_expression LOGICAL_OR • M logical_AND_expression

    $default  reduce using rule 65 (M)

    M  go to state 236


State 176

   64 conditional_expression: logical_OR_expression N • QUESTION M expression N COLON M conditional_expression

    QUESTION  shift, and go to state 237


State 177

  222 function_definition: declaration_specifiers declarator declaration_list_opt change_table CURLY_BRACKET_OPEN • block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    ENUM                shift, and go to state 2
    RESTRICT            shift, and go to state 3
    UNSIGNED            shift, and go to state 4
    BREAK               shift, and go to state 238
    EXTERN              shift, and go to state 5
    RETURN              shift, and go to state 239
    VOID                shift, and go to state 6
    CASE                shift, and go to state 240
    FLOAT               shift, and go to state 7
    SHORT               shift, and go to state 8
    VOLATILE            shift, and go to state 9
    CHAR                shift, and go to state 10
    FOR                 shift, and go to state 241
    SIGNED              shift, and go to state 11
    WHILE               shift, and go to state 242
    CONST               shift, and go to state 12
    GOTO                shift, and go to state 243
    SIZEOF              shift, and go to state 72
    BOOL                shift, and go to state 13
    CONTINUE            shift, and go to state 244
    IF                  shift, and go to state 245
    STATIC              shift, and go to state 14
    COMPLEX             shift, and go to state 15
    DEFAULT             shift, and go to state 246
    INLINE              shift, and go to state 16
    IMAGINARY           shift, and go to state 17
    DO                  shift, and go to state 247
    INT                 shift, and go to state 18
    SWITCH              shift, and go to state 248
    DOUBLE              shift, and go to state 19
    LONG                shift, and go to state 20
    REGISTER            shift, and go to state 21
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 249
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    SEMICOLON           shift, and go to state 250
    IDENTIFIER          shift, and go to state 251
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    $default  reduce using rule 190 (block_item_list_opt)

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    declaration                go to state 253
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 254
    labeled_statement          go to state 255
    compound_statement         go to state 256
    block_item_list_opt        go to state 257
    block_item_list            go to state 258
    block_item                 go to state 259
    expression_statement       go to state 260
    selection_statement        go to state 261
    iteration_statement        go to state 262
    jump_statement             go to state 263


State 178

  145 direct_declarator: direct_declarator PARANTHESIS_OPEN identifier_list PARANTHESIS_CLOSE •

    $default  reduce using rule 145 (direct_declarator)


State 179

  160 identifier_list: identifier_list COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 264


State 180

  146 direct_declarator: direct_declarator PARANTHESIS_OPEN change_table PARANTHESIS_CLOSE •

    $default  reduce using rule 146 (direct_declarator)


State 181

  157 parameter_declaration: declaration_specifiers • declarator
  158                      | declaration_specifiers •

    PARANTHESIS_OPEN  shift, and go to state 34
    ASTERISK          shift, and go to state 35
    IDENTIFIER        shift, and go to state 37

    $default  reduce using rule 158 (parameter_declaration)

    declarator         go to state 265
    direct_declarator  go to state 41
    pointer            go to state 42


State 182

  144 direct_declarator: direct_declarator PARANTHESIS_OPEN change_table parameter_type_list • PARANTHESIS_CLOSE

    PARANTHESIS_CLOSE  shift, and go to state 266


State 183

  153 parameter_type_list: parameter_list •
  154                    | parameter_list • COMMA ELLIPSIS
  156 parameter_list: parameter_list • COMMA parameter_declaration

    COMMA  shift, and go to state 267

    $default  reduce using rule 153 (parameter_type_list)


State 184

  155 parameter_list: parameter_declaration •

    $default  reduce using rule 155 (parameter_list)


State 185

  140 direct_declarator: direct_declarator SQ_BRACKET_OPEN STATIC assignment_expression • SQ_BRACKET_CLOSE

    SQ_BRACKET_CLOSE  shift, and go to state 268


State 186

  139 direct_declarator: direct_declarator SQ_BRACKET_OPEN STATIC type_qualifier_list • assignment_expression SQ_BRACKET_CLOSE
  152 type_qualifier_list: type_qualifier_list • type_qualifier

    RESTRICT          shift, and go to state 3
    VOLATILE          shift, and go to state 9
    CONST             shift, and go to state 12
    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 269
    type_qualifier             go to state 69


State 187

  143 direct_declarator: direct_declarator SQ_BRACKET_OPEN ASTERISK SQ_BRACKET_CLOSE •

    $default  reduce using rule 143 (direct_declarator)


State 188

  137 direct_declarator: direct_declarator SQ_BRACKET_OPEN assignment_expression SQ_BRACKET_CLOSE •

    $default  reduce using rule 137 (direct_declarator)


State 189

  141 direct_declarator: direct_declarator SQ_BRACKET_OPEN type_qualifier_list STATIC • assignment_expression SQ_BRACKET_CLOSE

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 270


State 190

  136 direct_declarator: direct_declarator SQ_BRACKET_OPEN type_qualifier_list SQ_BRACKET_CLOSE •

    $default  reduce using rule 136 (direct_declarator)


State 191

   28 unary_operator: ASTERISK •
  142 direct_declarator: direct_declarator SQ_BRACKET_OPEN type_qualifier_list ASTERISK • SQ_BRACKET_CLOSE

    SQ_BRACKET_CLOSE  shift, and go to state 271

    $default  reduce using rule 28 (unary_operator)


State 192

  135 direct_declarator: direct_declarator SQ_BRACKET_OPEN type_qualifier_list assignment_expression • SQ_BRACKET_CLOSE

    SQ_BRACKET_CLOSE  shift, and go to state 272


State 193

   82 constant_expression: conditional_expression •

    $default  reduce using rule 82 (constant_expression)


State 194

  126 enumerator: IDENTIFIER ASSIGN constant_expression •

    $default  reduce using rule 126 (enumerator)


State 195

  119 enum_specifier: ENUM identifier_opt CURLY_BRACKET_OPEN enumerator_list COMMA CURLY_BRACKET_CLOSE •

    $default  reduce using rule 119 (enum_specifier)


State 196

  124 enumerator_list: enumerator_list COMMA enumerator •

    $default  reduce using rule 124 (enumerator_list)


State 197

   15 postfix_expression: PARANTHESIS_OPEN type_name • PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | PARANTHESIS_OPEN type_name • PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   26 unary_expression: SIZEOF PARANTHESIS_OPEN type_name • PARANTHESIS_CLOSE

    PARANTHESIS_CLOSE  shift, and go to state 273


State 198

    4 primary_expression: PARANTHESIS_OPEN expression PARANTHESIS_CLOSE •

    $default  reduce using rule 4 (primary_expression)


State 199

   81 expression: expression COMMA • assignment_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 274


State 200

  116 specifier_qualifier_list_opt: specifier_qualifier_list •

    $default  reduce using rule 116 (specifier_qualifier_list_opt)


State 201

  114 specifier_qualifier_list: type_specifier specifier_qualifier_list_opt •

    $default  reduce using rule 114 (specifier_qualifier_list)


State 202

  115 specifier_qualifier_list: type_qualifier specifier_qualifier_list_opt •

    $default  reduce using rule 115 (specifier_qualifier_list)


State 203

   15 postfix_expression: PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE • CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE • CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   34 cast_expression: PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE • cast_expression

    SIZEOF              shift, and go to state 72
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 275
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    IDENTIFIER          shift, and go to state 83
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    primary_expression  go to state 88
    constant            go to state 89
    postfix_expression  go to state 90
    unary_expression    go to state 156
    unary_operator      go to state 92
    cast_expression     go to state 276


State 204

  172 designator: SQ_BRACKET_OPEN constant_expression • SQ_BRACKET_CLOSE

    SQ_BRACKET_CLOSE  shift, and go to state 277


State 205

  173 designator: PERIOD IDENTIFIER •

    $default  reduce using rule 173 (designator)


State 206

  163 initializer: CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE •

    $default  reduce using rule 163 (initializer)


State 207

  164 initializer: CURLY_BRACKET_OPEN initializer_list COMMA • CURLY_BRACKET_CLOSE
  166 initializer_list: initializer_list COMMA • designation_opt initializer

    SQ_BRACKET_OPEN      shift, and go to state 128
    CURLY_BRACKET_CLOSE  shift, and go to state 278
    PERIOD               shift, and go to state 129

    $default  reduce using rule 168 (designation_opt)

    designation_opt  go to state 279
    designation      go to state 132
    designator_list  go to state 133
    designator       go to state 134


State 208

  165 initializer_list: designation_opt initializer •

    $default  reduce using rule 165 (initializer_list)


State 209

  169 designation: designator_list ASSIGN •

    $default  reduce using rule 169 (designation)


State 210

  171 designator_list: designator_list designator •

    $default  reduce using rule 171 (designator_list)


State 211

   15 postfix_expression: PARANTHESIS_OPEN type_name • PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | PARANTHESIS_OPEN type_name • PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    PARANTHESIS_CLOSE  shift, and go to state 280


State 212

   10 postfix_expression: postfix_expression PARANTHESIS_OPEN argument_expression_list_opt • PARANTHESIS_CLOSE

    PARANTHESIS_CLOSE  shift, and go to state 281


State 213

   17 argument_expression_list_opt: argument_expression_list •
   20 argument_expression_list: argument_expression_list • COMMA assignment_expression

    COMMA  shift, and go to state 282

    $default  reduce using rule 17 (argument_expression_list_opt)


State 214

   19 argument_expression_list: assignment_expression •

    $default  reduce using rule 19 (argument_expression_list)


State 215

    9 postfix_expression: postfix_expression SQ_BRACKET_OPEN expression • SQ_BRACKET_CLOSE
   81 expression: expression • COMMA assignment_expression

    SQ_BRACKET_CLOSE  shift, and go to state 283
    COMMA             shift, and go to state 199


State 216

   11 postfix_expression: postfix_expression PERIOD IDENTIFIER •

    $default  reduce using rule 11 (postfix_expression)


State 217

   12 postfix_expression: postfix_expression ARROW IDENTIFIER •

    $default  reduce using rule 12 (postfix_expression)


State 218

   68 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 68 (assignment_expression)


State 219

   36 multiplicative_expression: multiplicative_expression ASTERISK cast_expression •

    $default  reduce using rule 36 (multiplicative_expression)


State 220

   37 multiplicative_expression: multiplicative_expression SLASH cast_expression •

    $default  reduce using rule 37 (multiplicative_expression)


State 221

   38 multiplicative_expression: multiplicative_expression PERCENT cast_expression •

    $default  reduce using rule 38 (multiplicative_expression)


State 222

   36 multiplicative_expression: multiplicative_expression • ASTERISK cast_expression
   37                          | multiplicative_expression • SLASH cast_expression
   38                          | multiplicative_expression • PERCENT cast_expression
   40 additive_expression: additive_expression PLUS multiplicative_expression •

    ASTERISK  shift, and go to state 158
    SLASH     shift, and go to state 159
    PERCENT   shift, and go to state 160

    $default  reduce using rule 40 (additive_expression)


State 223

   36 multiplicative_expression: multiplicative_expression • ASTERISK cast_expression
   37                          | multiplicative_expression • SLASH cast_expression
   38                          | multiplicative_expression • PERCENT cast_expression
   41 additive_expression: additive_expression MINUS multiplicative_expression •

    ASTERISK  shift, and go to state 158
    SLASH     shift, and go to state 159
    PERCENT   shift, and go to state 160

    $default  reduce using rule 41 (additive_expression)


State 224

   40 additive_expression: additive_expression • PLUS multiplicative_expression
   41                    | additive_expression • MINUS multiplicative_expression
   43 shift_expression: shift_expression LEFT_SHIFT additive_expression •

    PLUS   shift, and go to state 161
    MINUS  shift, and go to state 162

    $default  reduce using rule 43 (shift_expression)


State 225

   40 additive_expression: additive_expression • PLUS multiplicative_expression
   41                    | additive_expression • MINUS multiplicative_expression
   44 shift_expression: shift_expression RIGHT_SHIFT additive_expression •

    PLUS   shift, and go to state 161
    MINUS  shift, and go to state 162

    $default  reduce using rule 44 (shift_expression)


State 226

   43 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   44                 | shift_expression • RIGHT_SHIFT additive_expression
   46 relational_expression: relational_expression LESS_THAN shift_expression •

    LEFT_SHIFT   shift, and go to state 163
    RIGHT_SHIFT  shift, and go to state 164

    $default  reduce using rule 46 (relational_expression)


State 227

   43 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   44                 | shift_expression • RIGHT_SHIFT additive_expression
   47 relational_expression: relational_expression GREATER_THAN shift_expression •

    LEFT_SHIFT   shift, and go to state 163
    RIGHT_SHIFT  shift, and go to state 164

    $default  reduce using rule 47 (relational_expression)


State 228

   43 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   44                 | shift_expression • RIGHT_SHIFT additive_expression
   48 relational_expression: relational_expression LESS_THAN_EQUAL shift_expression •

    LEFT_SHIFT   shift, and go to state 163
    RIGHT_SHIFT  shift, and go to state 164

    $default  reduce using rule 48 (relational_expression)


State 229

   43 shift_expression: shift_expression • LEFT_SHIFT additive_expression
   44                 | shift_expression • RIGHT_SHIFT additive_expression
   49 relational_expression: relational_expression GREATER_THAN_EQUAL shift_expression •

    LEFT_SHIFT   shift, and go to state 163
    RIGHT_SHIFT  shift, and go to state 164

    $default  reduce using rule 49 (relational_expression)


State 230

   46 relational_expression: relational_expression • LESS_THAN shift_expression
   47                      | relational_expression • GREATER_THAN shift_expression
   48                      | relational_expression • LESS_THAN_EQUAL shift_expression
   49                      | relational_expression • GREATER_THAN_EQUAL shift_expression
   51 equality_expression: equality_expression EQUAL relational_expression •

    LESS_THAN           shift, and go to state 165
    GREATER_THAN        shift, and go to state 166
    LESS_THAN_EQUAL     shift, and go to state 167
    GREATER_THAN_EQUAL  shift, and go to state 168

    $default  reduce using rule 51 (equality_expression)


State 231

   46 relational_expression: relational_expression • LESS_THAN shift_expression
   47                      | relational_expression • GREATER_THAN shift_expression
   48                      | relational_expression • LESS_THAN_EQUAL shift_expression
   49                      | relational_expression • GREATER_THAN_EQUAL shift_expression
   52 equality_expression: equality_expression NOT_EQUAL relational_expression •

    LESS_THAN           shift, and go to state 165
    GREATER_THAN        shift, and go to state 166
    LESS_THAN_EQUAL     shift, and go to state 167
    GREATER_THAN_EQUAL  shift, and go to state 168

    $default  reduce using rule 52 (equality_expression)


State 232

   51 equality_expression: equality_expression • EQUAL relational_expression
   52                    | equality_expression • NOT_EQUAL relational_expression
   54 AND_expression: AND_expression AMPERSAND equality_expression •

    EQUAL      shift, and go to state 169
    NOT_EQUAL  shift, and go to state 170

    $default  reduce using rule 54 (AND_expression)


State 233

   54 AND_expression: AND_expression • AMPERSAND equality_expression
   56 exclusive_OR_expression: exclusive_OR_expression CARET AND_expression •

    AMPERSAND  shift, and go to state 171

    $default  reduce using rule 56 (exclusive_OR_expression)


State 234

   56 exclusive_OR_expression: exclusive_OR_expression • CARET AND_expression
   58 inclusive_OR_expression: inclusive_OR_expression PIPE exclusive_OR_expression •

    CARET  shift, and go to state 172

    $default  reduce using rule 58 (inclusive_OR_expression)


State 235

   60 logical_AND_expression: logical_AND_expression LOGICAL_AND M • inclusive_OR_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 284


State 236

   62 logical_OR_expression: logical_OR_expression LOGICAL_OR M • logical_AND_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 285


State 237

   64 conditional_expression: logical_OR_expression N QUESTION • M expression N COLON M conditional_expression

    $default  reduce using rule 65 (M)

    M  go to state 286


State 238

  215 jump_statement: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 287


State 239

  216 jump_statement: RETURN • expression SEMICOLON
  217               | RETURN • SEMICOLON

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    SEMICOLON         shift, and go to state 288
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 289


State 240

  186 labeled_statement: CASE • constant_expression COLON statement

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 193
    constant_expression        go to state 290


State 241

  204 iteration_statement: FOR • F PARANTHESIS_OPEN X change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE M loop_statement
  205                    | FOR • F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M loop_statement
  206                    | FOR • F PARANTHESIS_OPEN X change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  207                    | FOR • F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 208 (F)

    F  go to state 291


State 242

  200 iteration_statement: WHILE • W PARANTHESIS_OPEN X change_table M expression PARANTHESIS_CLOSE M loop_statement
  201                    | WHILE • W PARANTHESIS_OPEN X change_table M expression PARANTHESIS_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 209 (W)

    W  go to state 292


State 243

  213 jump_statement: GOTO • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 293


State 244

  214 jump_statement: CONTINUE • SEMICOLON

    SEMICOLON  shift, and go to state 294


State 245

  197 selection_statement: IF • PARANTHESIS_OPEN expression N PARANTHESIS_CLOSE M statement N
  198                    | IF • PARANTHESIS_OPEN expression N PARANTHESIS_CLOSE M statement N ELSE M statement

    PARANTHESIS_OPEN  shift, and go to state 295


State 246

  187 labeled_statement: DEFAULT • COLON statement

    COLON  shift, and go to state 296


State 247

  202 iteration_statement: DO • D M loop_statement M WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON
  203                    | DO • D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON

    $default  reduce using rule 210 (D)

    D  go to state 297


State 248

  199 selection_statement: SWITCH • PARANTHESIS_OPEN expression PARANTHESIS_CLOSE statement

    PARANTHESIS_OPEN  shift, and go to state 298


State 249

  188 compound_statement: CURLY_BRACKET_OPEN • X change_table block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 211 (X)

    X  go to state 299


State 250

  196 expression_statement: SEMICOLON •

    $default  reduce using rule 196 (expression_statement)


State 251

    1 primary_expression: IDENTIFIER •
  185 labeled_statement: IDENTIFIER • COLON statement

    COLON  shift, and go to state 300

    $default  reduce using rule 1 (primary_expression)


State 252

   81 expression: expression • COMMA assignment_expression
  195 expression_statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 301
    COMMA      shift, and go to state 199


State 253

  193 block_item: declaration •

    $default  reduce using rule 193 (block_item)


State 254

  194 block_item: statement •

    $default  reduce using rule 194 (block_item)


State 255

  174 statement: labeled_statement •

    $default  reduce using rule 174 (statement)


State 256

  175 statement: compound_statement •

    $default  reduce using rule 175 (statement)


State 257

  222 function_definition: declaration_specifiers declarator declaration_list_opt change_table CURLY_BRACKET_OPEN block_item_list_opt • CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 302


State 258

  189 block_item_list_opt: block_item_list •
  192 block_item_list: block_item_list • M block_item

    CURLY_BRACKET_CLOSE  reduce using rule 189 (block_item_list_opt)
    $default             reduce using rule 65 (M)

    M  go to state 303


State 259

  191 block_item_list: block_item •

    $default  reduce using rule 191 (block_item_list)


State 260

  176 statement: expression_statement •

    $default  reduce using rule 176 (statement)


State 261

  177 statement: selection_statement •

    $default  reduce using rule 177 (statement)


State 262

  178 statement: iteration_statement •

    $default  reduce using rule 178 (statement)


State 263

  179 statement: jump_statement •

    $default  reduce using rule 179 (statement)


State 264

  160 identifier_list: identifier_list COMMA IDENTIFIER •

    $default  reduce using rule 160 (identifier_list)


State 265

  157 parameter_declaration: declaration_specifiers declarator •

    $default  reduce using rule 157 (parameter_declaration)


State 266

  144 direct_declarator: direct_declarator PARANTHESIS_OPEN change_table parameter_type_list PARANTHESIS_CLOSE •

    $default  reduce using rule 144 (direct_declarator)


State 267

  154 parameter_type_list: parameter_list COMMA • ELLIPSIS
  156 parameter_list: parameter_list COMMA • parameter_declaration

    AUTO       shift, and go to state 1
    ENUM       shift, and go to state 2
    RESTRICT   shift, and go to state 3
    UNSIGNED   shift, and go to state 4
    EXTERN     shift, and go to state 5
    VOID       shift, and go to state 6
    FLOAT      shift, and go to state 7
    SHORT      shift, and go to state 8
    VOLATILE   shift, and go to state 9
    CHAR       shift, and go to state 10
    SIGNED     shift, and go to state 11
    CONST      shift, and go to state 12
    BOOL       shift, and go to state 13
    STATIC     shift, and go to state 14
    COMPLEX    shift, and go to state 15
    INLINE     shift, and go to state 16
    IMAGINARY  shift, and go to state 17
    INT        shift, and go to state 18
    DOUBLE     shift, and go to state 19
    LONG       shift, and go to state 20
    REGISTER   shift, and go to state 21
    ELLIPSIS   shift, and go to state 304

    declaration_specifiers   go to state 181
    storage_class_specifier  go to state 24
    type_specifier           go to state 25
    enum_specifier           go to state 26
    type_qualifier           go to state 27
    function_specifier       go to state 28
    parameter_declaration    go to state 305


State 268

  140 direct_declarator: direct_declarator SQ_BRACKET_OPEN STATIC assignment_expression SQ_BRACKET_CLOSE •

    $default  reduce using rule 140 (direct_declarator)


State 269

  139 direct_declarator: direct_declarator SQ_BRACKET_OPEN STATIC type_qualifier_list assignment_expression • SQ_BRACKET_CLOSE

    SQ_BRACKET_CLOSE  shift, and go to state 306


State 270

  141 direct_declarator: direct_declarator SQ_BRACKET_OPEN type_qualifier_list STATIC assignment_expression • SQ_BRACKET_CLOSE

    SQ_BRACKET_CLOSE  shift, and go to state 307


State 271

  142 direct_declarator: direct_declarator SQ_BRACKET_OPEN type_qualifier_list ASTERISK SQ_BRACKET_CLOSE •

    $default  reduce using rule 142 (direct_declarator)


State 272

  135 direct_declarator: direct_declarator SQ_BRACKET_OPEN type_qualifier_list assignment_expression SQ_BRACKET_CLOSE •

    $default  reduce using rule 135 (direct_declarator)


State 273

   15 postfix_expression: PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE • CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE • CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE
   26 unary_expression: SIZEOF PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE •

    CURLY_BRACKET_OPEN  shift, and go to state 275

    $default  reduce using rule 26 (unary_expression)


State 274

   81 expression: expression COMMA assignment_expression •

    $default  reduce using rule 81 (expression)


State 275

   15 postfix_expression: PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE CURLY_BRACKET_OPEN • initializer_list CURLY_BRACKET_CLOSE
   16                   | PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE CURLY_BRACKET_OPEN • initializer_list COMMA CURLY_BRACKET_CLOSE

    SQ_BRACKET_OPEN  shift, and go to state 128
    PERIOD           shift, and go to state 129

    $default  reduce using rule 168 (designation_opt)

    initializer_list  go to state 308
    designation_opt   go to state 131
    designation       go to state 132
    designator_list   go to state 133
    designator        go to state 134


State 276

   34 cast_expression: PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE cast_expression •

    $default  reduce using rule 34 (cast_expression)


State 277

  172 designator: SQ_BRACKET_OPEN constant_expression SQ_BRACKET_CLOSE •

    $default  reduce using rule 172 (designator)


State 278

  164 initializer: CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE •

    $default  reduce using rule 164 (initializer)


State 279

  166 initializer_list: initializer_list COMMA designation_opt • initializer

    SIZEOF              shift, and go to state 72
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 74
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    IDENTIFIER          shift, and go to state 83
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 105
    initializer                go to state 309


State 280

   15 postfix_expression: PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE • CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE
   16                   | PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE • CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 275


State 281

   10 postfix_expression: postfix_expression PARANTHESIS_OPEN argument_expression_list_opt PARANTHESIS_CLOSE •

    $default  reduce using rule 10 (postfix_expression)


State 282

   20 argument_expression_list: argument_expression_list COMMA • assignment_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 310


State 283

    9 postfix_expression: postfix_expression SQ_BRACKET_OPEN expression SQ_BRACKET_CLOSE •

    $default  reduce using rule 9 (postfix_expression)


State 284

   58 inclusive_OR_expression: inclusive_OR_expression • PIPE exclusive_OR_expression
   60 logical_AND_expression: logical_AND_expression LOGICAL_AND M inclusive_OR_expression •

    PIPE  shift, and go to state 173

    $default  reduce using rule 60 (logical_AND_expression)


State 285

   60 logical_AND_expression: logical_AND_expression • LOGICAL_AND M inclusive_OR_expression
   62 logical_OR_expression: logical_OR_expression LOGICAL_OR M logical_AND_expression •

    LOGICAL_AND  shift, and go to state 174

    $default  reduce using rule 62 (logical_OR_expression)


State 286

   64 conditional_expression: logical_OR_expression N QUESTION M • expression N COLON M conditional_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 311


State 287

  215 jump_statement: BREAK SEMICOLON •

    $default  reduce using rule 215 (jump_statement)


State 288

  217 jump_statement: RETURN SEMICOLON •

    $default  reduce using rule 217 (jump_statement)


State 289

   81 expression: expression • COMMA assignment_expression
  216 jump_statement: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 312
    COMMA      shift, and go to state 199


State 290

  186 labeled_statement: CASE constant_expression • COLON statement

    COLON  shift, and go to state 313


State 291

  204 iteration_statement: FOR F • PARANTHESIS_OPEN X change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE M loop_statement
  205                    | FOR F • PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M loop_statement
  206                    | FOR F • PARANTHESIS_OPEN X change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  207                    | FOR F • PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    PARANTHESIS_OPEN  shift, and go to state 314


State 292

  200 iteration_statement: WHILE W • PARANTHESIS_OPEN X change_table M expression PARANTHESIS_CLOSE M loop_statement
  201                    | WHILE W • PARANTHESIS_OPEN X change_table M expression PARANTHESIS_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE

    PARANTHESIS_OPEN  shift, and go to state 315


State 293

  213 jump_statement: GOTO IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 316


State 294

  214 jump_statement: CONTINUE SEMICOLON •

    $default  reduce using rule 214 (jump_statement)


State 295

  197 selection_statement: IF PARANTHESIS_OPEN • expression N PARANTHESIS_CLOSE M statement N
  198                    | IF PARANTHESIS_OPEN • expression N PARANTHESIS_CLOSE M statement N ELSE M statement

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 317


State 296

  187 labeled_statement: DEFAULT COLON • statement

    BREAK               shift, and go to state 238
    RETURN              shift, and go to state 239
    CASE                shift, and go to state 240
    FOR                 shift, and go to state 241
    WHILE               shift, and go to state 242
    GOTO                shift, and go to state 243
    SIZEOF              shift, and go to state 72
    CONTINUE            shift, and go to state 244
    IF                  shift, and go to state 245
    DEFAULT             shift, and go to state 246
    DO                  shift, and go to state 247
    SWITCH              shift, and go to state 248
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 249
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    SEMICOLON           shift, and go to state 250
    IDENTIFIER          shift, and go to state 251
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    statement                  go to state 318
    labeled_statement          go to state 255
    compound_statement         go to state 256
    expression_statement       go to state 260
    selection_statement        go to state 261
    iteration_statement        go to state 262
    jump_statement             go to state 263


State 297

  202 iteration_statement: DO D • M loop_statement M WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON
  203                    | DO D • CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON

    CURLY_BRACKET_OPEN  shift, and go to state 319

    $default  reduce using rule 65 (M)

    M  go to state 320


State 298

  199 selection_statement: SWITCH PARANTHESIS_OPEN • expression PARANTHESIS_CLOSE statement

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 321


State 299

  188 compound_statement: CURLY_BRACKET_OPEN X • change_table block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 212 (change_table)

    change_table  go to state 322


State 300

  185 labeled_statement: IDENTIFIER COLON • statement

    BREAK               shift, and go to state 238
    RETURN              shift, and go to state 239
    CASE                shift, and go to state 240
    FOR                 shift, and go to state 241
    WHILE               shift, and go to state 242
    GOTO                shift, and go to state 243
    SIZEOF              shift, and go to state 72
    CONTINUE            shift, and go to state 244
    IF                  shift, and go to state 245
    DEFAULT             shift, and go to state 246
    DO                  shift, and go to state 247
    SWITCH              shift, and go to state 248
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 249
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    SEMICOLON           shift, and go to state 250
    IDENTIFIER          shift, and go to state 251
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    statement                  go to state 323
    labeled_statement          go to state 255
    compound_statement         go to state 256
    expression_statement       go to state 260
    selection_statement        go to state 261
    iteration_statement        go to state 262
    jump_statement             go to state 263


State 301

  195 expression_statement: expression SEMICOLON •

    $default  reduce using rule 195 (expression_statement)


State 302

  222 function_definition: declaration_specifiers declarator declaration_list_opt change_table CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE •

    $default  reduce using rule 222 (function_definition)


State 303

  192 block_item_list: block_item_list M • block_item

    AUTO                shift, and go to state 1
    ENUM                shift, and go to state 2
    RESTRICT            shift, and go to state 3
    UNSIGNED            shift, and go to state 4
    BREAK               shift, and go to state 238
    EXTERN              shift, and go to state 5
    RETURN              shift, and go to state 239
    VOID                shift, and go to state 6
    CASE                shift, and go to state 240
    FLOAT               shift, and go to state 7
    SHORT               shift, and go to state 8
    VOLATILE            shift, and go to state 9
    CHAR                shift, and go to state 10
    FOR                 shift, and go to state 241
    SIGNED              shift, and go to state 11
    WHILE               shift, and go to state 242
    CONST               shift, and go to state 12
    GOTO                shift, and go to state 243
    SIZEOF              shift, and go to state 72
    BOOL                shift, and go to state 13
    CONTINUE            shift, and go to state 244
    IF                  shift, and go to state 245
    STATIC              shift, and go to state 14
    COMPLEX             shift, and go to state 15
    DEFAULT             shift, and go to state 246
    INLINE              shift, and go to state 16
    IMAGINARY           shift, and go to state 17
    DO                  shift, and go to state 247
    INT                 shift, and go to state 18
    SWITCH              shift, and go to state 248
    DOUBLE              shift, and go to state 19
    LONG                shift, and go to state 20
    REGISTER            shift, and go to state 21
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 249
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    SEMICOLON           shift, and go to state 250
    IDENTIFIER          shift, and go to state 251
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    declaration                go to state 253
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 254
    labeled_statement          go to state 255
    compound_statement         go to state 256
    block_item                 go to state 324
    expression_statement       go to state 260
    selection_statement        go to state 261
    iteration_statement        go to state 262
    jump_statement             go to state 263


State 304

  154 parameter_type_list: parameter_list COMMA ELLIPSIS •

    $default  reduce using rule 154 (parameter_type_list)


State 305

  156 parameter_list: parameter_list COMMA parameter_declaration •

    $default  reduce using rule 156 (parameter_list)


State 306

  139 direct_declarator: direct_declarator SQ_BRACKET_OPEN STATIC type_qualifier_list assignment_expression SQ_BRACKET_CLOSE •

    $default  reduce using rule 139 (direct_declarator)


State 307

  141 direct_declarator: direct_declarator SQ_BRACKET_OPEN type_qualifier_list STATIC assignment_expression SQ_BRACKET_CLOSE •

    $default  reduce using rule 141 (direct_declarator)


State 308

   15 postfix_expression: PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list • CURLY_BRACKET_CLOSE
   16                   | PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list • COMMA CURLY_BRACKET_CLOSE
  166 initializer_list: initializer_list • COMMA designation_opt initializer

    CURLY_BRACKET_CLOSE  shift, and go to state 325
    COMMA                shift, and go to state 326


State 309

  166 initializer_list: initializer_list COMMA designation_opt initializer •

    $default  reduce using rule 166 (initializer_list)


State 310

   20 argument_expression_list: argument_expression_list COMMA assignment_expression •

    $default  reduce using rule 20 (argument_expression_list)


State 311

   64 conditional_expression: logical_OR_expression N QUESTION M expression • N COLON M conditional_expression
   81 expression: expression • COMMA assignment_expression

    COMMA  shift, and go to state 199

    $default  reduce using rule 66 (N)

    N  go to state 327


State 312

  216 jump_statement: RETURN expression SEMICOLON •

    $default  reduce using rule 216 (jump_statement)


State 313

  186 labeled_statement: CASE constant_expression COLON • statement

    BREAK               shift, and go to state 238
    RETURN              shift, and go to state 239
    CASE                shift, and go to state 240
    FOR                 shift, and go to state 241
    WHILE               shift, and go to state 242
    GOTO                shift, and go to state 243
    SIZEOF              shift, and go to state 72
    CONTINUE            shift, and go to state 244
    IF                  shift, and go to state 245
    DEFAULT             shift, and go to state 246
    DO                  shift, and go to state 247
    SWITCH              shift, and go to state 248
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 249
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    SEMICOLON           shift, and go to state 250
    IDENTIFIER          shift, and go to state 251
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    statement                  go to state 328
    labeled_statement          go to state 255
    compound_statement         go to state 256
    expression_statement       go to state 260
    selection_statement        go to state 261
    iteration_statement        go to state 262
    jump_statement             go to state 263


State 314

  204 iteration_statement: FOR F PARANTHESIS_OPEN • X change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE M loop_statement
  205                    | FOR F PARANTHESIS_OPEN • X change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M loop_statement
  206                    | FOR F PARANTHESIS_OPEN • X change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  207                    | FOR F PARANTHESIS_OPEN • X change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 211 (X)

    X  go to state 329


State 315

  200 iteration_statement: WHILE W PARANTHESIS_OPEN • X change_table M expression PARANTHESIS_CLOSE M loop_statement
  201                    | WHILE W PARANTHESIS_OPEN • X change_table M expression PARANTHESIS_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 211 (X)

    X  go to state 330


State 316

  213 jump_statement: GOTO IDENTIFIER SEMICOLON •

    $default  reduce using rule 213 (jump_statement)


State 317

   81 expression: expression • COMMA assignment_expression
  197 selection_statement: IF PARANTHESIS_OPEN expression • N PARANTHESIS_CLOSE M statement N
  198                    | IF PARANTHESIS_OPEN expression • N PARANTHESIS_CLOSE M statement N ELSE M statement

    COMMA  shift, and go to state 199

    $default  reduce using rule 66 (N)

    N  go to state 331


State 318

  187 labeled_statement: DEFAULT COLON statement •

    $default  reduce using rule 187 (labeled_statement)


State 319

  203 iteration_statement: DO D CURLY_BRACKET_OPEN • M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON

    $default  reduce using rule 65 (M)

    M  go to state 332


State 320

  202 iteration_statement: DO D M • loop_statement M WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON

    BREAK             shift, and go to state 238
    RETURN            shift, and go to state 239
    CASE              shift, and go to state 240
    FOR               shift, and go to state 241
    WHILE             shift, and go to state 242
    GOTO              shift, and go to state 243
    SIZEOF            shift, and go to state 72
    CONTINUE          shift, and go to state 244
    IF                shift, and go to state 245
    DEFAULT           shift, and go to state 246
    DO                shift, and go to state 247
    SWITCH            shift, and go to state 248
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    SEMICOLON         shift, and go to state 250
    IDENTIFIER        shift, and go to state 251
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    loop_statement             go to state 333
    labeled_statement          go to state 334
    expression_statement       go to state 335
    selection_statement        go to state 336
    iteration_statement        go to state 337
    jump_statement             go to state 338


State 321

   81 expression: expression • COMMA assignment_expression
  199 selection_statement: SWITCH PARANTHESIS_OPEN expression • PARANTHESIS_CLOSE statement

    PARANTHESIS_CLOSE  shift, and go to state 339
    COMMA              shift, and go to state 199


State 322

  188 compound_statement: CURLY_BRACKET_OPEN X change_table • block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    ENUM                shift, and go to state 2
    RESTRICT            shift, and go to state 3
    UNSIGNED            shift, and go to state 4
    BREAK               shift, and go to state 238
    EXTERN              shift, and go to state 5
    RETURN              shift, and go to state 239
    VOID                shift, and go to state 6
    CASE                shift, and go to state 240
    FLOAT               shift, and go to state 7
    SHORT               shift, and go to state 8
    VOLATILE            shift, and go to state 9
    CHAR                shift, and go to state 10
    FOR                 shift, and go to state 241
    SIGNED              shift, and go to state 11
    WHILE               shift, and go to state 242
    CONST               shift, and go to state 12
    GOTO                shift, and go to state 243
    SIZEOF              shift, and go to state 72
    BOOL                shift, and go to state 13
    CONTINUE            shift, and go to state 244
    IF                  shift, and go to state 245
    STATIC              shift, and go to state 14
    COMPLEX             shift, and go to state 15
    DEFAULT             shift, and go to state 246
    INLINE              shift, and go to state 16
    IMAGINARY           shift, and go to state 17
    DO                  shift, and go to state 247
    INT                 shift, and go to state 18
    SWITCH              shift, and go to state 248
    DOUBLE              shift, and go to state 19
    LONG                shift, and go to state 20
    REGISTER            shift, and go to state 21
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 249
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    SEMICOLON           shift, and go to state 250
    IDENTIFIER          shift, and go to state 251
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    $default  reduce using rule 190 (block_item_list_opt)

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    declaration                go to state 253
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 254
    labeled_statement          go to state 255
    compound_statement         go to state 256
    block_item_list_opt        go to state 340
    block_item_list            go to state 258
    block_item                 go to state 259
    expression_statement       go to state 260
    selection_statement        go to state 261
    iteration_statement        go to state 262
    jump_statement             go to state 263


State 323

  185 labeled_statement: IDENTIFIER COLON statement •

    $default  reduce using rule 185 (labeled_statement)


State 324

  192 block_item_list: block_item_list M block_item •

    $default  reduce using rule 192 (block_item_list)


State 325

   15 postfix_expression: PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list CURLY_BRACKET_CLOSE •

    $default  reduce using rule 15 (postfix_expression)


State 326

   16 postfix_expression: PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA • CURLY_BRACKET_CLOSE
  166 initializer_list: initializer_list COMMA • designation_opt initializer

    SQ_BRACKET_OPEN      shift, and go to state 128
    CURLY_BRACKET_CLOSE  shift, and go to state 341
    PERIOD               shift, and go to state 129

    $default  reduce using rule 168 (designation_opt)

    designation_opt  go to state 279
    designation      go to state 132
    designator_list  go to state 133
    designator       go to state 134


State 327

   64 conditional_expression: logical_OR_expression N QUESTION M expression N • COLON M conditional_expression

    COLON  shift, and go to state 342


State 328

  186 labeled_statement: CASE constant_expression COLON statement •

    $default  reduce using rule 186 (labeled_statement)


State 329

  204 iteration_statement: FOR F PARANTHESIS_OPEN X • change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE M loop_statement
  205                    | FOR F PARANTHESIS_OPEN X • change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M loop_statement
  206                    | FOR F PARANTHESIS_OPEN X • change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  207                    | FOR F PARANTHESIS_OPEN X • change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 212 (change_table)

    change_table  go to state 343


State 330

  200 iteration_statement: WHILE W PARANTHESIS_OPEN X • change_table M expression PARANTHESIS_CLOSE M loop_statement
  201                    | WHILE W PARANTHESIS_OPEN X • change_table M expression PARANTHESIS_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 212 (change_table)

    change_table  go to state 344


State 331

  197 selection_statement: IF PARANTHESIS_OPEN expression N • PARANTHESIS_CLOSE M statement N
  198                    | IF PARANTHESIS_OPEN expression N • PARANTHESIS_CLOSE M statement N ELSE M statement

    PARANTHESIS_CLOSE  shift, and go to state 345


State 332

  203 iteration_statement: DO D CURLY_BRACKET_OPEN M • block_item_list_opt CURLY_BRACKET_CLOSE M WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON

    AUTO                shift, and go to state 1
    ENUM                shift, and go to state 2
    RESTRICT            shift, and go to state 3
    UNSIGNED            shift, and go to state 4
    BREAK               shift, and go to state 238
    EXTERN              shift, and go to state 5
    RETURN              shift, and go to state 239
    VOID                shift, and go to state 6
    CASE                shift, and go to state 240
    FLOAT               shift, and go to state 7
    SHORT               shift, and go to state 8
    VOLATILE            shift, and go to state 9
    CHAR                shift, and go to state 10
    FOR                 shift, and go to state 241
    SIGNED              shift, and go to state 11
    WHILE               shift, and go to state 242
    CONST               shift, and go to state 12
    GOTO                shift, and go to state 243
    SIZEOF              shift, and go to state 72
    BOOL                shift, and go to state 13
    CONTINUE            shift, and go to state 244
    IF                  shift, and go to state 245
    STATIC              shift, and go to state 14
    COMPLEX             shift, and go to state 15
    DEFAULT             shift, and go to state 246
    INLINE              shift, and go to state 16
    IMAGINARY           shift, and go to state 17
    DO                  shift, and go to state 247
    INT                 shift, and go to state 18
    SWITCH              shift, and go to state 248
    DOUBLE              shift, and go to state 19
    LONG                shift, and go to state 20
    REGISTER            shift, and go to state 21
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 249
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    SEMICOLON           shift, and go to state 250
    IDENTIFIER          shift, and go to state 251
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    $default  reduce using rule 190 (block_item_list_opt)

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    declaration                go to state 253
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 254
    labeled_statement          go to state 255
    compound_statement         go to state 256
    block_item_list_opt        go to state 346
    block_item_list            go to state 258
    block_item                 go to state 259
    expression_statement       go to state 260
    selection_statement        go to state 261
    iteration_statement        go to state 262
    jump_statement             go to state 263


State 333

  202 iteration_statement: DO D M loop_statement • M WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON

    $default  reduce using rule 65 (M)

    M  go to state 347


State 334

  180 loop_statement: labeled_statement •

    $default  reduce using rule 180 (loop_statement)


State 335

  181 loop_statement: expression_statement •

    $default  reduce using rule 181 (loop_statement)


State 336

  182 loop_statement: selection_statement •

    $default  reduce using rule 182 (loop_statement)


State 337

  183 loop_statement: iteration_statement •

    $default  reduce using rule 183 (loop_statement)


State 338

  184 loop_statement: jump_statement •

    $default  reduce using rule 184 (loop_statement)


State 339

  199 selection_statement: SWITCH PARANTHESIS_OPEN expression PARANTHESIS_CLOSE • statement

    BREAK               shift, and go to state 238
    RETURN              shift, and go to state 239
    CASE                shift, and go to state 240
    FOR                 shift, and go to state 241
    WHILE               shift, and go to state 242
    GOTO                shift, and go to state 243
    SIZEOF              shift, and go to state 72
    CONTINUE            shift, and go to state 244
    IF                  shift, and go to state 245
    DEFAULT             shift, and go to state 246
    DO                  shift, and go to state 247
    SWITCH              shift, and go to state 248
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 249
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    SEMICOLON           shift, and go to state 250
    IDENTIFIER          shift, and go to state 251
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    statement                  go to state 348
    labeled_statement          go to state 255
    compound_statement         go to state 256
    expression_statement       go to state 260
    selection_statement        go to state 261
    iteration_statement        go to state 262
    jump_statement             go to state 263


State 340

  188 compound_statement: CURLY_BRACKET_OPEN X change_table block_item_list_opt • CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 349


State 341

   16 postfix_expression: PARANTHESIS_OPEN type_name PARANTHESIS_CLOSE CURLY_BRACKET_OPEN initializer_list COMMA CURLY_BRACKET_CLOSE •

    $default  reduce using rule 16 (postfix_expression)


State 342

   64 conditional_expression: logical_OR_expression N QUESTION M expression N COLON • M conditional_expression

    $default  reduce using rule 65 (M)

    M  go to state 350


State 343

  204 iteration_statement: FOR F PARANTHESIS_OPEN X change_table • declaration M expression_statement M expression N PARANTHESIS_CLOSE M loop_statement
  205                    | FOR F PARANTHESIS_OPEN X change_table • expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M loop_statement
  206                    | FOR F PARANTHESIS_OPEN X change_table • declaration M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE
  207                    | FOR F PARANTHESIS_OPEN X change_table • expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO              shift, and go to state 1
    ENUM              shift, and go to state 2
    RESTRICT          shift, and go to state 3
    UNSIGNED          shift, and go to state 4
    EXTERN            shift, and go to state 5
    VOID              shift, and go to state 6
    FLOAT             shift, and go to state 7
    SHORT             shift, and go to state 8
    VOLATILE          shift, and go to state 9
    CHAR              shift, and go to state 10
    SIGNED            shift, and go to state 11
    CONST             shift, and go to state 12
    SIZEOF            shift, and go to state 72
    BOOL              shift, and go to state 13
    STATIC            shift, and go to state 14
    COMPLEX           shift, and go to state 15
    INLINE            shift, and go to state 16
    IMAGINARY         shift, and go to state 17
    INT               shift, and go to state 18
    DOUBLE            shift, and go to state 19
    LONG              shift, and go to state 20
    REGISTER          shift, and go to state 21
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    SEMICOLON         shift, and go to state 250
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    declaration                go to state 351
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    expression_statement       go to state 352


State 344

  200 iteration_statement: WHILE W PARANTHESIS_OPEN X change_table • M expression PARANTHESIS_CLOSE M loop_statement
  201                    | WHILE W PARANTHESIS_OPEN X change_table • M expression PARANTHESIS_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 65 (M)

    M  go to state 353


State 345

  197 selection_statement: IF PARANTHESIS_OPEN expression N PARANTHESIS_CLOSE • M statement N
  198                    | IF PARANTHESIS_OPEN expression N PARANTHESIS_CLOSE • M statement N ELSE M statement

    $default  reduce using rule 65 (M)

    M  go to state 354


State 346

  203 iteration_statement: DO D CURLY_BRACKET_OPEN M block_item_list_opt • CURLY_BRACKET_CLOSE M WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON

    CURLY_BRACKET_CLOSE  shift, and go to state 355


State 347

  202 iteration_statement: DO D M loop_statement M • WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON

    WHILE  shift, and go to state 356


State 348

  199 selection_statement: SWITCH PARANTHESIS_OPEN expression PARANTHESIS_CLOSE statement •

    $default  reduce using rule 199 (selection_statement)


State 349

  188 compound_statement: CURLY_BRACKET_OPEN X change_table block_item_list_opt CURLY_BRACKET_CLOSE •

    $default  reduce using rule 188 (compound_statement)


State 350

   64 conditional_expression: logical_OR_expression N QUESTION M expression N COLON M • conditional_expression

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 156
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 357


State 351

  204 iteration_statement: FOR F PARANTHESIS_OPEN X change_table declaration • M expression_statement M expression N PARANTHESIS_CLOSE M loop_statement
  206                    | FOR F PARANTHESIS_OPEN X change_table declaration • M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 65 (M)

    M  go to state 358


State 352

  205 iteration_statement: FOR F PARANTHESIS_OPEN X change_table expression_statement • M expression_statement M expression N PARANTHESIS_CLOSE M loop_statement
  207                    | FOR F PARANTHESIS_OPEN X change_table expression_statement • M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 65 (M)

    M  go to state 359


State 353

  200 iteration_statement: WHILE W PARANTHESIS_OPEN X change_table M • expression PARANTHESIS_CLOSE M loop_statement
  201                    | WHILE W PARANTHESIS_OPEN X change_table M • expression PARANTHESIS_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 360


State 354

  197 selection_statement: IF PARANTHESIS_OPEN expression N PARANTHESIS_CLOSE M • statement N
  198                    | IF PARANTHESIS_OPEN expression N PARANTHESIS_CLOSE M • statement N ELSE M statement

    BREAK               shift, and go to state 238
    RETURN              shift, and go to state 239
    CASE                shift, and go to state 240
    FOR                 shift, and go to state 241
    WHILE               shift, and go to state 242
    GOTO                shift, and go to state 243
    SIZEOF              shift, and go to state 72
    CONTINUE            shift, and go to state 244
    IF                  shift, and go to state 245
    DEFAULT             shift, and go to state 246
    DO                  shift, and go to state 247
    SWITCH              shift, and go to state 248
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 249
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    SEMICOLON           shift, and go to state 250
    IDENTIFIER          shift, and go to state 251
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    statement                  go to state 361
    labeled_statement          go to state 255
    compound_statement         go to state 256
    expression_statement       go to state 260
    selection_statement        go to state 261
    iteration_statement        go to state 262
    jump_statement             go to state 263


State 355

  203 iteration_statement: DO D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE • M WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON

    $default  reduce using rule 65 (M)

    M  go to state 362


State 356

  202 iteration_statement: DO D M loop_statement M WHILE • PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON

    PARANTHESIS_OPEN  shift, and go to state 363


State 357

   64 conditional_expression: logical_OR_expression N QUESTION M expression N COLON M conditional_expression •

    $default  reduce using rule 64 (conditional_expression)


State 358

  204 iteration_statement: FOR F PARANTHESIS_OPEN X change_table declaration M • expression_statement M expression N PARANTHESIS_CLOSE M loop_statement
  206                    | FOR F PARANTHESIS_OPEN X change_table declaration M • expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    SEMICOLON         shift, and go to state 250
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    expression_statement       go to state 364


State 359

  205 iteration_statement: FOR F PARANTHESIS_OPEN X change_table expression_statement M • expression_statement M expression N PARANTHESIS_CLOSE M loop_statement
  207                    | FOR F PARANTHESIS_OPEN X change_table expression_statement M • expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    SEMICOLON         shift, and go to state 250
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    expression_statement       go to state 365


State 360

   81 expression: expression • COMMA assignment_expression
  200 iteration_statement: WHILE W PARANTHESIS_OPEN X change_table M expression • PARANTHESIS_CLOSE M loop_statement
  201                    | WHILE W PARANTHESIS_OPEN X change_table M expression • PARANTHESIS_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE

    PARANTHESIS_CLOSE  shift, and go to state 366
    COMMA              shift, and go to state 199


State 361

  197 selection_statement: IF PARANTHESIS_OPEN expression N PARANTHESIS_CLOSE M statement • N
  198                    | IF PARANTHESIS_OPEN expression N PARANTHESIS_CLOSE M statement • N ELSE M statement

    $default  reduce using rule 66 (N)

    N  go to state 367


State 362

  203 iteration_statement: DO D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M • WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON

    WHILE  shift, and go to state 368


State 363

  202 iteration_statement: DO D M loop_statement M WHILE PARANTHESIS_OPEN • expression PARANTHESIS_CLOSE SEMICOLON

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 369


State 364

  204 iteration_statement: FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement • M expression N PARANTHESIS_CLOSE M loop_statement
  206                    | FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement • M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 65 (M)

    M  go to state 370


State 365

  205 iteration_statement: FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement • M expression N PARANTHESIS_CLOSE M loop_statement
  207                    | FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement • M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 65 (M)

    M  go to state 371


State 366

  200 iteration_statement: WHILE W PARANTHESIS_OPEN X change_table M expression PARANTHESIS_CLOSE • M loop_statement
  201                    | WHILE W PARANTHESIS_OPEN X change_table M expression PARANTHESIS_CLOSE • CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 372

    $default  reduce using rule 65 (M)

    M  go to state 373


State 367

  197 selection_statement: IF PARANTHESIS_OPEN expression N PARANTHESIS_CLOSE M statement N •
  198                    | IF PARANTHESIS_OPEN expression N PARANTHESIS_CLOSE M statement N • ELSE M statement

    ELSE  shift, and go to state 374

    $default  reduce using rule 197 (selection_statement)


State 368

  203 iteration_statement: DO D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE • PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON

    PARANTHESIS_OPEN  shift, and go to state 375


State 369

   81 expression: expression • COMMA assignment_expression
  202 iteration_statement: DO D M loop_statement M WHILE PARANTHESIS_OPEN expression • PARANTHESIS_CLOSE SEMICOLON

    PARANTHESIS_CLOSE  shift, and go to state 376
    COMMA              shift, and go to state 199


State 370

  204 iteration_statement: FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement M • expression N PARANTHESIS_CLOSE M loop_statement
  206                    | FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement M • expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 377


State 371

  205 iteration_statement: FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M • expression N PARANTHESIS_CLOSE M loop_statement
  207                    | FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M • expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 378


State 372

  201 iteration_statement: WHILE W PARANTHESIS_OPEN X change_table M expression PARANTHESIS_CLOSE CURLY_BRACKET_OPEN • M block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 65 (M)

    M  go to state 379


State 373

  200 iteration_statement: WHILE W PARANTHESIS_OPEN X change_table M expression PARANTHESIS_CLOSE M • loop_statement

    BREAK             shift, and go to state 238
    RETURN            shift, and go to state 239
    CASE              shift, and go to state 240
    FOR               shift, and go to state 241
    WHILE             shift, and go to state 242
    GOTO              shift, and go to state 243
    SIZEOF            shift, and go to state 72
    CONTINUE          shift, and go to state 244
    IF                shift, and go to state 245
    DEFAULT           shift, and go to state 246
    DO                shift, and go to state 247
    SWITCH            shift, and go to state 248
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    SEMICOLON         shift, and go to state 250
    IDENTIFIER        shift, and go to state 251
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    loop_statement             go to state 380
    labeled_statement          go to state 334
    expression_statement       go to state 335
    selection_statement        go to state 336
    iteration_statement        go to state 337
    jump_statement             go to state 338


State 374

  198 selection_statement: IF PARANTHESIS_OPEN expression N PARANTHESIS_CLOSE M statement N ELSE • M statement

    $default  reduce using rule 65 (M)

    M  go to state 381


State 375

  203 iteration_statement: DO D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE PARANTHESIS_OPEN • expression PARANTHESIS_CLOSE SEMICOLON

    SIZEOF            shift, and go to state 72
    PARANTHESIS_OPEN  shift, and go to state 73
    INCREMENT         shift, and go to state 75
    DECREMENT         shift, and go to state 76
    AMPERSAND         shift, and go to state 77
    ASTERISK          shift, and go to state 78
    PLUS              shift, and go to state 79
    MINUS             shift, and go to state 80
    TILDE             shift, and go to state 81
    EXCLAMATION       shift, and go to state 82
    IDENTIFIER        shift, and go to state 83
    CONSTANT_INT      shift, and go to state 84
    CONSTANT_FLOAT    shift, and go to state 85
    CONSTANT_CHAR     shift, and go to state 86
    LITERAL           shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 382


State 376

  202 iteration_statement: DO D M loop_statement M WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE • SEMICOLON

    SEMICOLON  shift, and go to state 383


State 377

   81 expression: expression • COMMA assignment_expression
  204 iteration_statement: FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement M expression • N PARANTHESIS_CLOSE M loop_statement
  206                    | FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement M expression • N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    COMMA  shift, and go to state 199

    $default  reduce using rule 66 (N)

    N  go to state 384


State 378

   81 expression: expression • COMMA assignment_expression
  205 iteration_statement: FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression • N PARANTHESIS_CLOSE M loop_statement
  207                    | FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression • N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    COMMA  shift, and go to state 199

    $default  reduce using rule 66 (N)

    N  go to state 385


State 379

  201 iteration_statement: WHILE W PARANTHESIS_OPEN X change_table M expression PARANTHESIS_CLOSE CURLY_BRACKET_OPEN M • block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    ENUM                shift, and go to state 2
    RESTRICT            shift, and go to state 3
    UNSIGNED            shift, and go to state 4
    BREAK               shift, and go to state 238
    EXTERN              shift, and go to state 5
    RETURN              shift, and go to state 239
    VOID                shift, and go to state 6
    CASE                shift, and go to state 240
    FLOAT               shift, and go to state 7
    SHORT               shift, and go to state 8
    VOLATILE            shift, and go to state 9
    CHAR                shift, and go to state 10
    FOR                 shift, and go to state 241
    SIGNED              shift, and go to state 11
    WHILE               shift, and go to state 242
    CONST               shift, and go to state 12
    GOTO                shift, and go to state 243
    SIZEOF              shift, and go to state 72
    BOOL                shift, and go to state 13
    CONTINUE            shift, and go to state 244
    IF                  shift, and go to state 245
    STATIC              shift, and go to state 14
    COMPLEX             shift, and go to state 15
    DEFAULT             shift, and go to state 246
    INLINE              shift, and go to state 16
    IMAGINARY           shift, and go to state 17
    DO                  shift, and go to state 247
    INT                 shift, and go to state 18
    SWITCH              shift, and go to state 248
    DOUBLE              shift, and go to state 19
    LONG                shift, and go to state 20
    REGISTER            shift, and go to state 21
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 249
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    SEMICOLON           shift, and go to state 250
    IDENTIFIER          shift, and go to state 251
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    $default  reduce using rule 190 (block_item_list_opt)

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    declaration                go to state 253
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 254
    labeled_statement          go to state 255
    compound_statement         go to state 256
    block_item_list_opt        go to state 386
    block_item_list            go to state 258
    block_item                 go to state 259
    expression_statement       go to state 260
    selection_statement        go to state 261
    iteration_statement        go to state 262
    jump_statement             go to state 263


State 380

  200 iteration_statement: WHILE W PARANTHESIS_OPEN X change_table M expression PARANTHESIS_CLOSE M loop_statement •

    $default  reduce using rule 200 (iteration_statement)


State 381

  198 selection_statement: IF PARANTHESIS_OPEN expression N PARANTHESIS_CLOSE M statement N ELSE M • statement

    BREAK               shift, and go to state 238
    RETURN              shift, and go to state 239
    CASE                shift, and go to state 240
    FOR                 shift, and go to state 241
    WHILE               shift, and go to state 242
    GOTO                shift, and go to state 243
    SIZEOF              shift, and go to state 72
    CONTINUE            shift, and go to state 244
    IF                  shift, and go to state 245
    DEFAULT             shift, and go to state 246
    DO                  shift, and go to state 247
    SWITCH              shift, and go to state 248
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 249
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    SEMICOLON           shift, and go to state 250
    IDENTIFIER          shift, and go to state 251
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    statement                  go to state 387
    labeled_statement          go to state 255
    compound_statement         go to state 256
    expression_statement       go to state 260
    selection_statement        go to state 261
    iteration_statement        go to state 262
    jump_statement             go to state 263


State 382

   81 expression: expression • COMMA assignment_expression
  203 iteration_statement: DO D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE PARANTHESIS_OPEN expression • PARANTHESIS_CLOSE SEMICOLON

    PARANTHESIS_CLOSE  shift, and go to state 388
    COMMA              shift, and go to state 199


State 383

  202 iteration_statement: DO D M loop_statement M WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON •

    $default  reduce using rule 202 (iteration_statement)


State 384

  204 iteration_statement: FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement M expression N • PARANTHESIS_CLOSE M loop_statement
  206                    | FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement M expression N • PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    PARANTHESIS_CLOSE  shift, and go to state 389


State 385

  205 iteration_statement: FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression N • PARANTHESIS_CLOSE M loop_statement
  207                    | FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression N • PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    PARANTHESIS_CLOSE  shift, and go to state 390


State 386

  201 iteration_statement: WHILE W PARANTHESIS_OPEN X change_table M expression PARANTHESIS_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt • CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 391


State 387

  198 selection_statement: IF PARANTHESIS_OPEN expression N PARANTHESIS_CLOSE M statement N ELSE M statement •

    $default  reduce using rule 198 (selection_statement)


State 388

  203 iteration_statement: DO D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE • SEMICOLON

    SEMICOLON  shift, and go to state 392


State 389

  204 iteration_statement: FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE • M loop_statement
  206                    | FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE • M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 65 (M)

    M  go to state 393


State 390

  205 iteration_statement: FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE • M loop_statement
  207                    | FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE • M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    $default  reduce using rule 65 (M)

    M  go to state 394


State 391

  201 iteration_statement: WHILE W PARANTHESIS_OPEN X change_table M expression PARANTHESIS_CLOSE CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE •

    $default  reduce using rule 201 (iteration_statement)


State 392

  203 iteration_statement: DO D CURLY_BRACKET_OPEN M block_item_list_opt CURLY_BRACKET_CLOSE M WHILE PARANTHESIS_OPEN expression PARANTHESIS_CLOSE SEMICOLON •

    $default  reduce using rule 203 (iteration_statement)


State 393

  204 iteration_statement: FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE M • loop_statement
  206                    | FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE M • CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    BREAK               shift, and go to state 238
    RETURN              shift, and go to state 239
    CASE                shift, and go to state 240
    FOR                 shift, and go to state 241
    WHILE               shift, and go to state 242
    GOTO                shift, and go to state 243
    SIZEOF              shift, and go to state 72
    CONTINUE            shift, and go to state 244
    IF                  shift, and go to state 245
    DEFAULT             shift, and go to state 246
    DO                  shift, and go to state 247
    SWITCH              shift, and go to state 248
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 395
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    SEMICOLON           shift, and go to state 250
    IDENTIFIER          shift, and go to state 251
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    loop_statement             go to state 396
    labeled_statement          go to state 334
    expression_statement       go to state 335
    selection_statement        go to state 336
    iteration_statement        go to state 337
    jump_statement             go to state 338


State 394

  205 iteration_statement: FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M • loop_statement
  207                    | FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M • CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE

    BREAK               shift, and go to state 238
    RETURN              shift, and go to state 239
    CASE                shift, and go to state 240
    FOR                 shift, and go to state 241
    WHILE               shift, and go to state 242
    GOTO                shift, and go to state 243
    SIZEOF              shift, and go to state 72
    CONTINUE            shift, and go to state 244
    IF                  shift, and go to state 245
    DEFAULT             shift, and go to state 246
    DO                  shift, and go to state 247
    SWITCH              shift, and go to state 248
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 397
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    SEMICOLON           shift, and go to state 250
    IDENTIFIER          shift, and go to state 251
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    loop_statement             go to state 398
    labeled_statement          go to state 334
    expression_statement       go to state 335
    selection_statement        go to state 336
    iteration_statement        go to state 337
    jump_statement             go to state 338


State 395

  206 iteration_statement: FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN • block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    ENUM                shift, and go to state 2
    RESTRICT            shift, and go to state 3
    UNSIGNED            shift, and go to state 4
    BREAK               shift, and go to state 238
    EXTERN              shift, and go to state 5
    RETURN              shift, and go to state 239
    VOID                shift, and go to state 6
    CASE                shift, and go to state 240
    FLOAT               shift, and go to state 7
    SHORT               shift, and go to state 8
    VOLATILE            shift, and go to state 9
    CHAR                shift, and go to state 10
    FOR                 shift, and go to state 241
    SIGNED              shift, and go to state 11
    WHILE               shift, and go to state 242
    CONST               shift, and go to state 12
    GOTO                shift, and go to state 243
    SIZEOF              shift, and go to state 72
    BOOL                shift, and go to state 13
    CONTINUE            shift, and go to state 244
    IF                  shift, and go to state 245
    STATIC              shift, and go to state 14
    COMPLEX             shift, and go to state 15
    DEFAULT             shift, and go to state 246
    INLINE              shift, and go to state 16
    IMAGINARY           shift, and go to state 17
    DO                  shift, and go to state 247
    INT                 shift, and go to state 18
    SWITCH              shift, and go to state 248
    DOUBLE              shift, and go to state 19
    LONG                shift, and go to state 20
    REGISTER            shift, and go to state 21
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 249
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    SEMICOLON           shift, and go to state 250
    IDENTIFIER          shift, and go to state 251
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    $default  reduce using rule 190 (block_item_list_opt)

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    declaration                go to state 253
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 254
    labeled_statement          go to state 255
    compound_statement         go to state 256
    block_item_list_opt        go to state 399
    block_item_list            go to state 258
    block_item                 go to state 259
    expression_statement       go to state 260
    selection_statement        go to state 261
    iteration_statement        go to state 262
    jump_statement             go to state 263


State 396

  204 iteration_statement: FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE M loop_statement •

    $default  reduce using rule 204 (iteration_statement)


State 397

  207 iteration_statement: FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN • block_item_list_opt CURLY_BRACKET_CLOSE

    AUTO                shift, and go to state 1
    ENUM                shift, and go to state 2
    RESTRICT            shift, and go to state 3
    UNSIGNED            shift, and go to state 4
    BREAK               shift, and go to state 238
    EXTERN              shift, and go to state 5
    RETURN              shift, and go to state 239
    VOID                shift, and go to state 6
    CASE                shift, and go to state 240
    FLOAT               shift, and go to state 7
    SHORT               shift, and go to state 8
    VOLATILE            shift, and go to state 9
    CHAR                shift, and go to state 10
    FOR                 shift, and go to state 241
    SIGNED              shift, and go to state 11
    WHILE               shift, and go to state 242
    CONST               shift, and go to state 12
    GOTO                shift, and go to state 243
    SIZEOF              shift, and go to state 72
    BOOL                shift, and go to state 13
    CONTINUE            shift, and go to state 244
    IF                  shift, and go to state 245
    STATIC              shift, and go to state 14
    COMPLEX             shift, and go to state 15
    DEFAULT             shift, and go to state 246
    INLINE              shift, and go to state 16
    IMAGINARY           shift, and go to state 17
    DO                  shift, and go to state 247
    INT                 shift, and go to state 18
    SWITCH              shift, and go to state 248
    DOUBLE              shift, and go to state 19
    LONG                shift, and go to state 20
    REGISTER            shift, and go to state 21
    PARANTHESIS_OPEN    shift, and go to state 73
    CURLY_BRACKET_OPEN  shift, and go to state 249
    INCREMENT           shift, and go to state 75
    DECREMENT           shift, and go to state 76
    AMPERSAND           shift, and go to state 77
    ASTERISK            shift, and go to state 78
    PLUS                shift, and go to state 79
    MINUS               shift, and go to state 80
    TILDE               shift, and go to state 81
    EXCLAMATION         shift, and go to state 82
    SEMICOLON           shift, and go to state 250
    IDENTIFIER          shift, and go to state 251
    CONSTANT_INT        shift, and go to state 84
    CONSTANT_FLOAT      shift, and go to state 85
    CONSTANT_CHAR       shift, and go to state 86
    LITERAL             shift, and go to state 87

    $default  reduce using rule 190 (block_item_list_opt)

    primary_expression         go to state 88
    constant                   go to state 89
    postfix_expression         go to state 90
    unary_expression           go to state 91
    unary_operator             go to state 92
    cast_expression            go to state 93
    multiplicative_expression  go to state 94
    additive_expression        go to state 95
    shift_expression           go to state 96
    relational_expression      go to state 97
    equality_expression        go to state 98
    AND_expression             go to state 99
    exclusive_OR_expression    go to state 100
    inclusive_OR_expression    go to state 101
    logical_AND_expression     go to state 102
    logical_OR_expression      go to state 103
    conditional_expression     go to state 104
    assignment_expression      go to state 122
    expression                 go to state 252
    declaration                go to state 253
    declaration_specifiers     go to state 58
    storage_class_specifier    go to state 24
    type_specifier             go to state 25
    enum_specifier             go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    statement                  go to state 254
    labeled_statement          go to state 255
    compound_statement         go to state 256
    block_item_list_opt        go to state 400
    block_item_list            go to state 258
    block_item                 go to state 259
    expression_statement       go to state 260
    selection_statement        go to state 261
    iteration_statement        go to state 262
    jump_statement             go to state 263


State 398

  205 iteration_statement: FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M loop_statement •

    $default  reduce using rule 205 (iteration_statement)


State 399

  206 iteration_statement: FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt • CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 401


State 400

  207 iteration_statement: FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt • CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 402


State 401

  206 iteration_statement: FOR F PARANTHESIS_OPEN X change_table declaration M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE •

    $default  reduce using rule 206 (iteration_statement)


State 402

  207 iteration_statement: FOR F PARANTHESIS_OPEN X change_table expression_statement M expression_statement M expression N PARANTHESIS_CLOSE M CURLY_BRACKET_OPEN block_item_list_opt CURLY_BRACKET_CLOSE •

    $default  reduce using rule 207 (iteration_statement)
